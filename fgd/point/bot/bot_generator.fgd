@PointClass base(BaseEntityPoint) 
	appliesto(TF2)
	iconsprite("editor/ficool2/bot_generator")
= bot_generator: "Entity spawns <count> TFBots every <interval> seconds, with at most <maxActive> active at once"
	[
	team[engine](string) : "Team" : "auto"
	team(choices) : "Team" : "auto" : "Team" =
		[
		"auto": "Any"
		"red": "RED"
		"blue": "BLU"
		]

	class[engine](string) : "Class" : "auto"
	class(choices) : "Class" : "auto" : "Class" =
		[
		"auto": "Any"
		"scout": "Scout"
		"sniper": "Sniper"
		"soldier": "Soldier"
		"demoman": "Demoman"
		"medic": "Medic"
		"heavyweapons": "Heavy"
		"pyro": "Pyro"
		"spy": "Spy"
		"engineer": "Engineer"
		]

	count(integer) : "Count" : 1 : "Number of TFBots to spawn over the lifetime of this bot generator."
	maxactive(integer) : "Max Active" : 1 : "Maximum number of active TFBots spawned at any given time from this generator."
	interval(float) : "Interval" : 0 : "Time (in seconds) between spawns"
	action_point(target_destination) : "Action Point" : : "Put the name of a bot_action_point here to tell the spawned bot to move there."
	
	initial_command[engine](string) : "Initial Command" : "goto action point"
	initial_command(choices) : "Initial Command" : "goto action point" : "Initial command to give this bot, if any." =
		[
		"goto action point": "Go to specified Action Point"
		"taunt": "Taunt"
		"despawn": "Leave the game"
		"cloak": "If Spy, Cloak"
		"uncloak": "If Spy, Uncloak"
		"attack sentry at next action point": "Attack sentry gun at next action point"
		"disguise": "If Spy, Disguise"
		]

	suppressfire(boolean) : "Suppress Fire" : "0" : "Newly generated TFBots will suppress their fire if this is set."
	disabledodge(boolean) : "Disable Dodge" : "0" : "Newly generated TFBots will not dodge if this is set."
	
	actionondeath[engine](integer) : "Action on Death" : 1
	actionondeath(choices) : "Action on Death" : 1 : "When a TFBot dies, they will either respawn like a normal player, remove themselves, or move to the spectator team." =
		[
		0: "Repawn as usual"
		1: "Remove self"
		2: "Move to Spectator team"
		]

	spectateondeath(boolean) : "Move to Spectator Team on Death" : 0 : "TFBots will move to the Spectator team on death.  Use this as a pooling mechanism"
	useteamspawnpoint(boolean) : "Use Team Spawn Point" : 0 : "TFBots will use their team spawn point, instead of this point if this is set."
	
	retainbuildings(boolean) : "Retain Buildings After Disconnect" : 0: "If set, any buildings (sentries, sappers, etc) built by bots from this generator will not be destroyed when their owners are removed."

	difficulty[engine](integer) : "Difficulty" : 0
	difficulty(choices) : "Difficulty" : 0 : "The skill level of bots created by this generator." =
		[
		-1: "Default"
		0: "Easy"
		1: "Normal"
		2: "Hard"
		3: "Expert"
		]

	spawnonlywhentriggered(boolean) : "Don't spawn bots unless triggered" : "0" : "If this is set, you must use the SpawnBot input to have any bots spawn"

	spawnflags(flags) =
		[
		1: "Spawned Bots Ignore Enemy Scouts" : 0
		2: "Spawned Bots Ignore Enemy Soldiers" : 0
		4: "Spawned Bots Ignore Enemy Pyros" : 0
		8: "Spawned Bots Ignore Enemy Demomen" : 0
		16: "Spawned Bots Ignore Enemy Heavies" : 0
		32: "Spawned Bots Ignore Enemy Medics" : 0
		64: "Spawned Bots Ignore Enemy Engineers" : 0
		128: "Spawned Bots Ignore Enemy Snipers" : 0
		256: "Spawned Bots Ignore Enemy Spies" : 0
		512: "Spawned Bots Ignore Enemy Sentry Guns" : 0
		1024: "Spawned Bots Ignore Scenario Goals" : 0
		]


	// Inputs
	input Enable(void) : "Begin spawning TFBots"
	input Disable(void) : "Stop spawning TFBots"
	input SetSuppressFire(boolean) : "Set whether TFBots should suppress their fire."
	input SetDisableDodge(boolean) : "Set whether TFBots should have the dodge ability disabled or not."
	input SetDifficulty(integer) : "Change the skill level of subsequently generated bots (-1=default, 0=easy, 1=normal, 2=hard, 3=expert)."
	input CommandGotoActionPoint(target_destination) : "Commands all bots spawned by this generator to go to the specified action point by name."
	input SetAttentionFocus(target_destination) : "All bots spawned by this generator will focus exclusively on this entity. If entity is action point, entities within that point's radius will be attended to."
	input ClearAttentionFocus(target_destination) : "Remove attention focus restrictions from bots spawned by this generator."
	input SpawnBot(void) : "Attempt to spawn a bot within the rules specified."
	input RemoveBots(void) : "Force remove any bots this entity spawned."

	// Outputs
	output OnSpawned(void) : "Sent when the TFBot has spawned into the environment"
	output OnExpended(void) : "Sent when the bot generator has reached its limit of the bots it can create"
	output OnBotKilled(void) : "Sent when a bot associated with this bot generator is killed"
	]
