@PointClass base(BaseEntityPoint) 
	appliesto(EP1, EP2, HL2, P1, P2) 
	iconsprite("editor/ts2do/script_intro.vmt") = script_intro: "Script: Custom entity used to handle the intro sequence."
	[
	alternatefovchange(boolean) : "Match env_zoom's FOV transition" : 0 : "Whether the script should match env_zoom's FOV transition."

	DrawSky[MBase](boolean) : "Draw skybox" : 0 : "Allows the skybox to be drawn while the script_intro is active. " +
		"Drawing the skybox *might* break the VortWarp shader used by the transcending vortigaunts in EP1/EP2."
	DrawSky2[MBase](boolean) : "Draw skybox in camera view" : 0 : "Allows the skybox to be drawn in the second view. " +
		"Otherwise draws a solid white background."
	UseEyePosition[MBase](boolean) : "Use camera's eye position" : 0 : "Uses the camera view entity's eye position instead of its origin. Intended to be used with info_player_view_proxy." 
	
	// Inputs
	input Activate(void) : "Take control of the player's view and start blending the two scenes."
	input Deactivate(void) : "Stop controlling the view."
	input SetCameraViewEntity(string) : "Set the viewpoint to blend with the player's viewpoint."
	input SetBlendMode(integer) : "Set the blending mode to use."
	input SetFOV(integer) : "Set the fov for the second camera."
	input SetNextFOV(integer) : "Set the FOV to blend to over time. Follow this with a SetFOVBlendTime input to start the fov blend."
	input SetFOVBlendTime(float) : "Set the amount of time it should take to blend to the next fov target, and start blending."
	input SetNextBlendMode(integer) : "Set the blending mode to blend to over time. Follow this with a SetNextBlendTime input to start the mode blend."
	input SetNextBlendTime(float) : "Set the amount of time it should take to blend to the next mode, and start blending."
	input FadeTo(string) : "Fade to a specific alpha amount of an amount of time. Parameters: <alpha> <duration>"
	input SetFadeColor(string) : "Set the fade color. Parameters: <Red> <Green> <Blue>"
	input SetDrawSky[MBase](bool) : "Sets whether the skybox should be drawn."
	input SetDrawSky2[MBase](bool) : "Sets whether the skybox should be drawn in the second view."
	]
