@PointClass base(BaseEntityAnimating) 
	appliesto(EP1, EP2, HL2, P1, Mesa) 	
	studioprop[-mesa, -MBase]("models/items/ammocrate_rockets.mdl")
	studioprop[+mesa]()
	studioprop[+MBase]("models/items/ammocrate_empty.mdl")
= item_ammo_crate: "Ammo Crate"
	[
	model[Mesa](studio) : "Model" : "models/items/ammocrate_rockets.mdl" : "Model to use for the ammo crate"

	ammotype[engine](string) : "Ammo Type" : 0
	ammotype[!Mesa](choices) : "Ammo Type" : 0 =
		[
		0: "Pistol"
		1: "SMG1"
		2: "AR2"
		3: "RPG Rounds"
		4: "Buckshot"
		5: "Grenades"
		6: "357 Magnum"
		7: "Crossbow Bolt"
		8 : "AR2 Alt-Fire Balls"
		9 : "SMG Alt-Fire Grenades"
		10 : "S.L.A.M." [MBase]
		11 : "Empty" [MBase]
		]
	AmmoType[Mesa](choices) : "Ammo Type" : "grenade_rpg" =
		[
		"9mm" : "9mm Rounds"
		"357" : ".357 Rounds"
		"bolt" : "Bolts"
		"buckshot" : "Buckshot"
		"energy" : "Energy"
		"grenade_mp5" : "Mp5 Grenade"
		"grenade_rpg" : "RPG"
		"grenade_frag" : "Frag Grenades"
		"grenade_satchel" : "Satchels"
		"grenade_tripmine" : "Tripmines"
		]
	
	skin[MBase](integer) : "Skin" : 0 : "The ''Empty'' ammo crate can use multiple skins based on other crates. " +
		"Changing the skin might be reflected in the viewport, " +
		"but it will only apply to the empty ammo crate."

	isDynamicMoving[Mesa](integer) : "CanMove" : 0 : "CanMove"
	AmmoCount[Mesa](integer) : "Ammo Count" : 1 : "Ammo Count"

	// Inputs
	input Skin[MBase](integer) : "Changes the model skin to the specified number."

	// Outputs
	output OnUsed(void) : "Fires when +used by the player."
	output OnAmmoTaken[MBase](void) : "Fires the instant ammo is taken from this crate."

	@resources
		[
		sound "AmmoCrate.Open"
    	sound "AmmoCrate.Close"
    	func item_ammo_crate // Depending on ammo type, a different model is included plus the ammo itself.
		]
	]
