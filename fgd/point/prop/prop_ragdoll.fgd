@PointClass 
	base(BaseEntityPhysics, EnableDisable, DXLevelChoice, SystemLevelChoice, SetModel)
	autovis(Props, Physics, Ragdoll)
	sphere(fademindist) 
	sphere(fademaxdist) 
	studioprop() 
= prop_ragdoll: "A prop that physically simulates and can be articulated with internal joints. " +
	"The joint constraints are part of the physics model."
	[
	spawnflags(flags)  =
		[
		4: "Debris - Don't collide with the player or other debris" : 1
		8192: "Allow Dissolve" : 0
		16384: "Motion Disabled" : 0
		32768: "Allow stretch" : 0
		65536: "Start asleep" : 0
		131072 : "Fixed constraints (make statue)" : 0 [MBase]
		262144 : "Allow +USE" : 0 [MBase]
		524288 : "Prevent pickup (if +USE is enabled)" : 0 [MBase]
		]
	MimicName[MESA](string) : "Character Manifest Mimic Name" : "" : "Choose a name or a classname from the character manifest to dress the ragdoll."
	health[MESA, MBase](integer) : "Health" : 100 : "The amount of damage the ragdoll takes before gibbing."
	EmitScent[EZ2](boolean) : "Should Emit Scent" : "Emit scents that will attract predators to this ragdoll."

	angleoverride(string) : "Override Animation" : : "Filled in by the engine via hammer_update_entity, do not edit by hand except to clear."

	// Inputs
	input StartRagdollBoogie(float) : "Begins ragdoll boogie effect. Parameter override = number of seconds to boogie."
	input Wake[MBase](void) : "Wakes up this physics object, if it is sleeping."
	input Sleep[MBase](void) : "Puts this physics object to sleep. It will wake if given the Wake input, or if force is applied to it. Note that physics objects go to sleep automatically after coming to rest for a while, so you don't really need to use this."
	input EnableMotion(void) : "Enable physics motion/collision response."
	input DisableMotion(void) : "Disable physics motion/collision response."
	input FadeAndRemove(float) : "Fade out then remove (kill) self. Parameter override = duration of fade"

	input EnableScent[EZ2](void) : "Start emitting scents that will attract predators to this ragdoll."
	input DisableScent[EZ2](void) : "Start emitting scents that will attract predators to this ragdoll."
	input Gib[EZ2](void) : "Apply 1000 damage to instantly gib this ragdoll."
	input AddToLRU[MBase](void) : "Adds the ragdoll to the cleanup list (ragdoll will fade out when it's the least recently used)"
	input RemoveFromLRU[MBase](void) : "Removes the ragdoll from the cleanup list, allowing it to exist indefinitely"

	output OnPlayerUse[MBase](void) : "Fires when the ragdoll is used, if +USE is enabled."

	@resources
		[
		particle "hgib" [+entropyzero2]
		]
	]
