@PointClass 
	base(BaseEntityPhysics, EnableDisable, DXLevelChoice, SystemLevelChoice, SetModel)
	autovis(Props, Physics, Ragdoll)
	sphere(fademindist) 
	sphere(fademaxdist) 
	studioprop() 
= prop_ragdoll: "A prop that physically simulates and can be articulated with internal joints. " +
	"The joint constraints are part of the physics model."
	[
	spawnflags(flags)  =
		[
		4: "Debris - Don't collide with the player or other debris" : 1
		8192: "Allow Dissolve" : 0
		16384: "Motion Disabled" : 0
		32768: "Allow stretch" : 0
		65536: "Start asleep" : 0
		]
		
	angleoverride(string) : "Override Animation" : : "Filled in by the engine via hammer_update_entity, do not edit by hand except to clear."

	// Inputs
	input StartRagdollBoogie(float) : "Begins ragdoll boogie effect. Parameter override = number of seconds to boogie."
	input Wake[MBase](void) : "Wakes up this physics object, if it is sleeping."
	input Sleep[MBase](void) : "Puts this physics object to sleep. It will wake if given the Wake input, or if force is applied to it. Note that physics objects go to sleep automatically after coming to rest for a while, so you don't really need to use this."
	input EnableMotion(void) : "Enable physics motion/collision response."
	input DisableMotion(void) : "Disable physics motion/collision response."
	input FadeAndRemove(float) : "Fade out then remove (kill) self. Parameter override = duration of fade"
	]
