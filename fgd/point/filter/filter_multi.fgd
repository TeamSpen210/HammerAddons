@FilterClass base(filter_base)
	autovis(Logic, Filters)
	iconsprite("editor/filter_multiple.vmt") 
	line(0 255 0, targetname, filter01)
	line(0 255 0, targetname, filter02)
	line(0 255 0, targetname, filter03)
	line(0 255 0, targetname, filter04)
	line(0 255 0, targetname, filter05)
	line(0 255 0, targetname, filter06)
	line(0 255 0, targetname, filter07)
	line(0 255 0, targetname, filter08)
	line(0 255 0, targetname, filter09)
	line(0 255 0, targetname, filter10)
	line(0 255 0, targetname, filter11)
	line(0 255 0, targetname, filter12)
	line(0 255 0, targetname, filter13)
	line(0 255 0, targetname, filter14)
	line(0 255 0, targetname, filter15)
	line(0 255 0, targetname, filter16)
	line(0 255 0, targetname, filter17)
	line(0 255 0, targetname, filter18)
	line(0 255 0, targetname, filter19)
	line(0 255 0, targetname, filter20)
= filter_multi: "A filter that tests the activator against multiple filters. " +
	"This allows you to build more complex filters, such as 'Allow anyone on Team 1 who is also class engineer', " +
	"or 'Allow everyone except classes npc_zombie and npc_headcrab'."
	[
	filtertype[engine](integer) : "Logic Type" : 0
	filtertype(choices) : "Logic Type" : 0 =
		[
		0: "AND (all filters must pass)"
		1: "OR (any filter must pass)"
		]

	negated(boolean) : "Negate Outcome" : 0 : "Whether to negate the result of the subfilters, " +
		"after combining them using the Logic Type chosen.\n" +
		"Negating the outcome using the AND logic type means that any subfilter must fail for this filter to pass.\n" +
		"Negating the outcome using the OR logic type means that all subfilters must fail for this filter to pass."

	filter01(filterclass) : "Filter 1" : : "Activator filter to test."
	filter02(filterclass) : "Filter 2" : : "Activator filter to test."
	filter03(filterclass) : "Filter 3" : : "Activator filter to test."
	filter04(filterclass) : "Filter 4" : : "Activator filter to test."
	filter05(filterclass) : "Filter 5" : : "Activator filter to test."
	filter06(filterclass) : "Filter 6" : : "Activator filter to test."
	filter07(filterclass) : "Filter 7" : : "Activator filter to test."
	filter08(filterclass) : "Filter 8" : : "Activator filter to test."
	filter09(filterclass) : "Filter 9" : : "Activator filter to test."
	filter10(filterclass) : "Filter 10" : : "Activator filter to test."
	]
