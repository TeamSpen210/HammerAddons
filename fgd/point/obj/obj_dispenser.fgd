@PointClass base(BaseEntityAnimating, BaseObject) 
	appliesto(TF2)
	line(255 255 255, targetname, touch_trigger)
	studioprop() 
= obj_dispenser: "TF2 Dispenser"
	[

	touch_trigger(target_destination) : "Custom Touch Trigger"
	skin[!engine](choices) : "[H] Team" : 0 : "Team to show in Hammer" =
	[
		0 : "RED"
		1 : "BLU"
	]

	model[engine](string) : "Model" : : "Doesn't exist in engine, this is a hack to prevent auto packing"
	model(choices) : "[H] Upgrade Level" : "models/buildables/dispenser_light.mdl" : "Upgrade level to show in Hammer" =
	[
		"models/buildables/dispenser_light.mdl" : "Level 1"
		"models/buildables/dispenser_lvl2_light.mdl" : "Level 2"
		"models/buildables/dispenser_lvl3_light.mdl" : "Level 3"
	]

	spawnflags(flags) : "spawnflags" =
		[
		4: "Upgradable" : 0
		]


	// Outputs
	output OnDestroyed(void) : "Fired when this entity is destroyed."

	@resources [
		entity dispenser_touch_trigger
		mdl "models/buildables/dispenser_blueprint.mdl"
		mdl "models/buildables/dispenser.mdl"
		mdl "models/buildables/dispenser_light.mdl"
		mdl "models/buildables/dispenser_lvl2.mdl"
		mdl "models/buildables/dispenser_lvl2_light.mdl"
		mdl "models/buildables/dispenser_lvl3.mdl"
		mdl "models/buildables/dispenser_lvl3_light.mdl"

		// PrecacheVGuiScreen("screen_obj_dispenser_blue")
		// PrecacheVGuiScreen("screen_obj_dispenser_red")
		sound "Building_Dispenser.Idle"
		sound "Building_Dispenser.GenerateMetal"
		sound "Building_Dispenser.Heal"
		particle "dispenser_heal_red"
		particle "dispenser_heal_blue"
		]
	]
