@PointClass base(Angles, ControlEnables)
	iconsprite("editor/comp_kv_setter")
	appliesto(srctools)
= comp_kv_setter : "Sets a keyvalue on an entity to a new value. " +
	"This is useful to compute spawnflags, or to adjust keyvalues when the target entity's options can't be set to a fixup variable."
	[
	target(target_destination) : "Target Entity" : : "The name of the entity or entities to set values on. " +
		"*-suffixed names work to target multiple entities."

	mode[engine](string) : "Mode" : "kv"
	mode(choices) : "Mode" : "kv" : "The type of value to set." = [
		"kv" : "KeyValues"
		"flags": "SpawnFlags"
	]

	kv_name(string) : "Name / Mask" : : "The name of the keyvalue to set, or the bits to change for spawnflags. " + 
		"Flag bits can be 0b010 binary, 0x1F hex, decimal, or the full name specified in the entity."

	kv_value_mode[engine](string) : "Value Mode" : "legacy"
	kv_value_mode(choices) : "Value Mode" : "legacy" : "Which value to use. " +
		"This allows using values altered in different ways by the instance." +
		"In legacy mode Ent Name then String is checked." = #snippet "CompKVMode"
	kv_value_global(string) : "Value - Fixed String" : : "The value to apply. This is unaffected by instance fixup names and transformations (except rotation if Rotate Value is turned on)."
	kv_value_local(target_destination) : "Value - Ent Name" : : "Used in Entity name mode. In an instance, this recieves prefix/postfix fixups."
	// Has to be "origin" type to get transformed in 2013 engine games
	kv_value_pos(origin) : "Value - Position" : : "Used in Position mode. In an instance, this will be offset by the instance position."

	invert(boolean) : "Invert Value" : 0 : "If enabled, invert the value so 0 and 1 are swapped."
	rotate(boolean) : "Rotate Value" : 0 : "If enabled, treat the value as a vector and rotate it by the angles set on this entity first. Useful to rotate the value correctly in an instance."
	conv_ang(boolean) : "Convert To Angle" : 0 : "If enabled, convert a +X axis normal back into the Euler angle."

	// We need to provide "some" outputs to allow you to add some.
	// These exist on everything, at least.
	output OnUser1(void) : "Fired in response to FireUser1 input."
	output OnUser2(void) : "Fired in response to FireUser2 input."
	output OnUser3(void) : "Fired in response to FireUser3 input."
	output OnUser4(void) : "Fired in response to FireUser4 input."
	output OnKilled[L4D](void) : "Fired when the entity is killed and removed from the game."
    
    @resources []
	]
