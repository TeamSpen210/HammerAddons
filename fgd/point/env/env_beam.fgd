@PointClass base(BaseBeam) 
	line(255 255 255, targetname, LightningStart, targetname, LightningEnd) 
	cylinder(255 255 255, targetname, LightningStart, Radius, targetname, LightningEnd, Radius) 
	line(64 64 64, targetname, lightningStart) 
	line(64 64 64, targetname, lightningEnd) 
	line(10 10 10, targetname, filtername)
	iconsprite("editor/env_beam.vmt") 
	sphere(radius) 
	color(200 200 0) 
= env_beam: "An entity that creates a visible beam between two points. " +
		"The points can be attached to entities to make the beam move around."
	[
	radius(integer) : "Radius" : 16 : "If the 'Random Strike' spawnflag is set, this radius determines the area within which the endpoints will randomly strike."
	life(float) : "Life (seconds 0 = infinite)" : 0 : "Amount of time before the beam dies. Setting to zero will make the beam stay forever."
	boltwidth(float) : "Width of beam" : 2 : "Pixel width of the beam."
	striketime(float) : "Strike again time (secs)" : 1 : "Refire time between random strikes of the beam. Only used if the 'Random Strike' spawnflag is set."
	
	lightningstart(target_destination) : "Start Entity" : : "Entity that the beam starts at."
	lightningend(target_destination) : "Ending Entity" : : "Entity that the beam ends at. If not set, the Ending Location will be used instead."
	decalname(string) : "Decal Name" : "Bigshot" : "Decal to be applied at the end of the beam"
	spawnflags(flags) =
		[
		1: "Start On" : 0
		2: "Toggle" : 0
		4: "Random Strike" : 0
		8: "Ring" : 0
		16: "StartSparks" : 0
		32: "EndSparks" : 0
		64: "Decal End" : 0
		128: "Shade Start" : 0
		256: "Shade End" : 0
		512: "Taper Out" : 0
		// Pretty useless for mappers, but is present...
		// 32768: "Temporary - not saved in save files" : 0
		]

	touchtype[engine](integer) : "Touch Type (tripwire)" : 0
	touchtype(choices) : "Touch Type (tripwire)" : 0 : "If you want the beam to fire an output when touched by entities, choose the entity type here." =
		[
		0: "Not a tripwire"
		1: "Player Only"
		2: "NPC Only"
		3: "Player or NPC"
		4: "Player or NPC or Physprop"
		]

	filtername(filterclass) : "Filter Name" : : "Filter to use to determine what triggers the output."
	targetpoint(vecline) : "Ending Location" : "0 0 0" : "If an Ending Entity is not specified, use this point as the destination instead." +
		"It is relative to the beam origin."

	clipstyle[engine](integer) : "Beam clipping" : 0
	clipstyle(choices) : "Beam clipping" : 0 : "Select whether you want the beam to clip against geometry or characters, making it stop prematurely." =
		[
		0: "Do not clip (default)"
		1: "Clip to geometry"
		2: "Clip to everything solid"
		]


	// Inputs
	input StrikeOnce(void) : "Causes the beam to strike once. It will stay on for its set Life and then turn off (it will never turn off if Life is set to zero)."
	input Amplitude(float) : "Set the amplitude of beam noise (0 - 255)."
	input SetStartEntity[MBase](target_destination) : "Sets the start entity."
	input SetEndEntity[MBase](target_destination) : "Sets the end entity."

	// Outputs
	output OnTouchedByEntity(void) : "Fired when an entity touches the beam. Only fired if the entity passes the 'Touch Type' choice."
	]
