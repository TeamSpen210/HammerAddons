@PointClass base(BaseEntityPoint)
	color(200 0 0) 
	iconsprite("editor/env_global.vmt") 
 	autovis(Point Entities, Globals, Env Global)
= env_global: "An entity to control a game-specific global states."
	[

	globalstate[engine](string) : "Global State to Set"
	globalstate(string) : "Global State to Set"
	
	globalstate[HL2, EP1, EP2](choices) : "Global State to Set" =
		[
		"gordon_precriminal": "Gordon pre-criminal (Point Insertion behavior)"
		"antlion_allied": "Antlions are player allies, respond to bugbait"
		"suit_no_sprint": "Disable sprinting"
		"super_phys_gun": "Enable Super Gravity Gun"
		"friendly_encounter": "Friendly encounter sequence (lower weapons, etc.)"
		"gordon_invulnerable": "Player is invulnerable"
		"no_seagulls_on_jeep": "Don't spawn seagulls on the jeep"
		"ep2_alyx_injured": "Episode 2: Alyx injured" [ep2]
		"ep_alyx_darknessmode": "Episode 1: Alyx darkness mode" [ep1]
		"hunters_to_run_over": "Ep2 Counter: Hunters to run over before they dodge" [ep2]
		]

	globalstate[P2](choices) : "Global State to Set" =
		[
		"portalgun_nospawn": "Spawn without Portalgun"
		"no_pinging_blue": "Prevent Pinging ATLAS"
		"no_pinging_orange": "Prevent Pinging P-Body"
		"no_taunting_blue": "Prevent Taunting ATLAS"
		"no_taunting_orange": "Prevent Taunting P-Body"
		]

	initialstate[engine](integer) : "Initial State" : 0
	initialstate(choices) : "Initial State" : 0 =
		[
		0: "Off"
		1: "On"
		2: "Dead"
		]

	counter(integer) : "Counter" : 0 : "An integer counter value associated with this global."
	spawnflags(flags) : "spawnflags" =
		[
		1: "Set Initial State" : 0
		]


	// Inputs
	input TurnOn(void) : "Set state of global to ON."
	input TurnOff(void) : "Set state of global to OFF."
	input Toggle(void) : "Toggles state of global between ON and OFF."
	input Remove(void) : "Set state of global to DEAD."
	input SetCounter(integer) : "Sets the counter value of this global."
	input AddToCounter(integer) : "Adds to the counter value of this global. Negative numbers subtract."
	input GetCounter(void) : "Causes the Counter output to be fired, passing the current counter value for this global. This doesn't work properly."

	// Outputs
	// This counter output is overwritten by the KV above, making it non-functional. MBase fixes it.
	output Counter(integer) : "Fired in response to the GetCounter input, passing the current value of the counter."
	]
