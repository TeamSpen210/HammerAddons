@PointClass base(BaseEntityPoint) 
	iconsprite("editor/env_tonemap_controller.vmt") 
 	autovis(Point Entities, Globals, Tonemap Controller)
	color(200 0 0)
= env_tonemap_controller: "An entity that controls the HDR tonemapping for the player. Think of it as a method of controlling the exposure of the player's eyes."
	[
	spawnflags(flags) : "spawnflags" =
		[
		1: "Master (Has priority if multiple env_tonemap_controllers exist)" : 0
		]

	bUseNextGenBloom[MESA](boolean) : "Use Next Gen Bloom" : 0	
	bUseCustomBloomNextGen_Threshold[MESA](boolean) : "Use Custom Next Gen Bloom Threshold" : 0
	
	fCustomBloomNextGen_Threshold[MESA](float)	: "Custom Next Gen Bloom Threshold": 0 : "Threshold for bright pass filter."
	
	bUseCustomBloomNextGen_tintExponent[MESA](boolean) : "Use Custom Next Gen Bloom Tint Exponent" : 0 
	
	m_fCustomBloomNextGen_r[MESA](float)	: "Custom Bloom Tint (R)": "1.0" : "m_fCustomBloomNextGen_r"
	m_fCustomBloomNextGen_g[MESA](float)	: "Custom Bloom Tint (G)": "1.0" : "m_fCustomBloomNextGen_g"
	m_fCustomBloomNextGen_b[MESA](float)	: "Custom Bloom Tint (B)": "1.0" : "m_fCustomBloomNextGen_b"
	m_fCustomBloomNextGen_exponent[MESA](float)	: "Custom Bloom Tint Exponent": "1.0" : "m_fCustomBloomNextGen_exponent"

	// Inputs
	input SetTonemapScale(integer) : "Set the player's tonemap scale. It should be a value between 0 and 2, where 0 is the eyes fully closed, 1 is use the unchanged autoexposure (default), and 2 is the eye fully wide open."
	input BlendTonemapScale(string) : "Blend from the player's current tonemap scale to a new one. The parameter syntax is as follows: <target tonemap scale> <blend duration>. For example: '0.5 10' would blend from the current tonemap scale to 0.5 over a period of 10 seconds. Tonemap scale is a value between 0 and 2, where 0 is the eyes fully closed, 1 is use the unchanged autoexposure (default), and 2 is the eye fully wide open."
	input UseDefaultAutoExposure(void) : "Revert to using the default tonemap auto exposure."
	input SetAutoExposureMin(float) : "Set a custom tonemap auto exposure minimum."
	input SetAutoExposureMax(float) : "Set a custom tonemap auto exposure maximum."
	input SetBloomScale(float) : "Set a custom bloom scale."
	input UseDefaultBloomScale(void) : "Revert to using the default bloom scale."
	input SetBloomScaleRange[MBase](string) : "Specify a base and minimum bloom scale. Format is <max bloom> <min bloom>."
	input SetTonemapRate(float) : "Set the rate for autoexposure adjustment."

	input InputSetBloomNxtGen_Threshold[MESA](float) : "InputSetBloomNxtGen_Threshold"
	
	input InputSetBloomNxtGen_TintR[MESA](float) : "InputSetBloomNxtGen_TintR"
	input InputSetBloomNxtGen_TintG[MESA](float) : "InputSetBloomNxtGen_TintG"
	input InputSetBloomNxtGen_TintB[MESA](float) : "InputSetBloomNxtGen_TintB"
	input InputSetBloomNxtGen_Exponent[MESA](float) : "InputSetBloomNxtGen_Exponent"
	input SetBloomExponent(float) : "Set a custom bloom exponent."
	input SetBloomSaturation(float) : "Set a custom bloom saturation."
	input SetTonemapPercentBrightPixels(float) : "Set a target for percentage of pixels above a certain brightness. (default: 2)"
	input SetTonemapPercentTarget(float) : "Set a custom brightness target for SetTonemapPercentBrightPixels. (default: 60)"
	input SetTonemapMinAvgLum(float) : "Sets custom tonemapping param (ask Alex for details; default: 3)."
	]
