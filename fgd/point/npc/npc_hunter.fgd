@NpcClass base(BaseNPC) 
	appliesto(EP2, P1) 
	studio[-MBase]("models/hunter.mdl")
	studio[+MBase]()
= npc_hunter: "A smaller, faster, strider that can pursue the player into buildings."
	[
	followtarget(target_destination) report: "Strider to Follow" : : "The name of the strider that this hunter should follow."
	
	NoIdlePatrol[engine](boolean) : "Don't patrol while idle" : 0
	NoIdlePatrol[MBase](choices) : "Patrol while idle" : 0 =
		[
		0: "Yes"
		1: "No"
		]

	CompanionHunter[EZ2](boolean) : "Companion Hunter" : 0 : "Allows this hunter to regenerate health and do other long-term companion-related things." 
	NoIdlePatrol[EZ2](boolean) : "Patrol while idle" : 0
	// Inputs
	input FollowStrider(target_destination) : "Sets the name of the strider that this hunter should follow."
	input SetMinigunTime(float) : "Time to shoot at any set minigun target."
	input SetMinigunTarget(string) : "Hunter will shoot minigun at the named target."
	input DisableShooting(void) : "Forces the hunter to be melee-only."
	input EnableShooting(void) : "Allows the hunter to use range attacks or melee attacks."
	input DisableSquadShootDelay(void) : "Disables the delay between range attacks for squads of hunters, allowing them to shoot as frequently as they wish."
	input EnableSquadShootDelay(void) : "Enables the delay between range attacks for squads of hunters."
	input EnableUnplantedShooting(void) : "Used mainly for scripted attacks against bullseyes. Enables the hunter to shoot without having to plant first."
	input DisableUnplantedShooting(void) : "Returns the hunter to normal after a call to EnableUnplantedShooting."
	input DoPhysicsBlast(void) : "Hunter will instantly do the defensive physics blast."
	input Crouch(void) : "Crouch down."
	input Stand(void) : "Stand up from crouch."
	input DisableCrouchWalk(void) : "UNUSED: Prevents the hunter from crouch walking."
	input EnableCrouchWalk(void) : "UNUSED: Allows the hunter to crouch walk."
	input UseSiegeTargets(string) : "Pass in the name of info_targets to shoot at when I can't shoot at the player."

	@resources
		[
		model "models/hunter.mdl" [-MBase]

		sound "NPC_Hunter.Idle"
		sound "NPC_Hunter.Scan"
		sound "NPC_Hunter.Alert"
		sound "NPC_Hunter.Pain"
		sound "NPC_Hunter.PreCharge"
		sound "NPC_Hunter.Angry"
		sound "NPC_Hunter.Death"
		sound "NPC_Hunter.FireMinigun"
		sound "NPC_Hunter.Footstep"
		sound "NPC_Hunter.BackFootstep"
		sound "NPC_Hunter.FlechetteVolleyWarn"
		sound "NPC_Hunter.FlechetteShoot"
		sound "NPC_Hunter.FlechetteShootLoop"
		sound "NPC_Hunter.FlankAnnounce"
		sound "NPC_Hunter.MeleeAnnounce"
		sound "NPC_Hunter.MeleeHit"
		sound "NPC_Hunter.TackleAnnounce"
		sound "NPC_Hunter.TackleHit"
		sound "NPC_Hunter.ChargeHitEnemy"
		sound "NPC_Hunter.ChargeHitWorld"
		sound "NPC_Hunter.FoundEnemy"
		sound "NPC_Hunter.FoundEnemyAck"
		sound "NPC_Hunter.DefendStrider"
		sound "NPC_Hunter.HitByVehicle"

		particle "hunter_muzzle_flash"
		particle "blood_impact_synth_01"
		particle "blood_impact_synth_01_arc_parent"
		particle "blood_spurt_synth_01"
		particle "blood_drip_synth_01"

		choreo "scenes/npc/hunter/hunter_scan.vcd"
		choreo "scenes/npc/hunter/hunter_eyeclose.vcd"
		choreo "scenes/npc/hunter/hunter_roar.vcd"
		choreo "scenes/npc/hunter/hunter_pain.vcd"
		choreo "scenes/npc/hunter/hunter_eyedarts_top.vcd"
		choreo "scenes/npc/hunter/hunter_eyedarts_bottom.vcd"

		material "materials/effects/water_highlight.vmt"

		entity hunter_flechette
		entity sparktrail
		]
	]
