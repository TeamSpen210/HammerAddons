@PointClass base(BaseEntityAnimating, EnableDisable) appliesto(DODS) studioprop("models/weapons/w_tnt_red.mdl") line(0 128 0, targetname, target_control_point) = dod_bomb_target : "Bomb Target.\n\nIf this bomb explodes, it is deactivated for the rest of the round unless set the Enable input."
[
	target_control_point(target_destination) report : "Target Control Point" : "Control point to help capture. Leave blank if this is not tied to a control point."
	
	bombing_team[engine](integer) : "Bombing Team" : 2
	bombing_team(choices) : "Bombing Team" : 2 : "To create a team-agnostic bomb target, place two dod_bomb_targets in the same location with the same angles. Send the `Disable` input to the opposite team's bomb target via `OnBombPlanted`, and send the `Enable` input to the opposite team's bomb target via `OnBombDefused`." =
	[
		2 : "Allies"
		3 : "Axis"
	]
		
	add_timer_seconds(integer) : "Add To Timer (sec)" : 0 : "Add this many seconds to the round timer when bomb explodes."
	
	output OnBombTargetActivated(void) : "Send when bomb target becomes active"
	output OnBombTargetDeactivated(void) : "Send when bomb target becomes inactive"
	output OnBombPlanted(void) : "Send when bomb is planted at this target"
	output OnBombExploded(void) : "Send when timer expires and bomb explodes"
	output OnBombDefused(void) : "Send when bomb is completely defused"

	@resources
	[
		// Red (actually Yellow) - able to plant
		// Grey - unable to plant
		// no suffix - armed
		mdl "models/weapons/w_tnt.mdl"
		mdl "models/weapons/w_tnt_grey.mdl"
	]
]