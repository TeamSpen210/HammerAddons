@PointClass base(BaseEntityPoint, EnableDisable) 
	appliesto(since_P2, MBase, Mesa, GMOD) 
	color(0 100 250)
	iconsprite("editor/logic_register_activator")
= logic_register_activator: "Stores an entity and sends messages with it as the activator\n" +
	"Useful for keeping track of entities with mangled names due to template spawners and instances."
	[

	// Inputs
	input Toggle(void) : "Toggle between enabled and disabled."
	input FireRegisteredAsActivator1(void) : "Trigger the OnRegisteredActivate1 output, with the activator being registered entity."
	input FireRegisteredAsActivator2(void) : "Trigger the OnRegisteredActivate2 output, with the activator being registered entity."
	input FireRegisteredAsActivator3(void) : "Trigger the OnRegisteredActivate3 output, with the activator being registered entity."
	input FireRegisteredAsActivator4(void) : "Trigger the OnRegisteredActivate4 output, with the activator being registered entity."

	input RegisterEntity(target_destination) : "Stores an entity to later be used as an activator."

	// Outputs
	output OnRegisteredActivate1(void) : "Fired to send a message using the registered entity as the activator."
	output OnRegisteredActivate2(void) : "Fired to send a message using the registered entity as the activator."
	output OnRegisteredActivate3(void) : "Fired to send a message using the registered entity as the activator."
	output OnRegisteredActivate4(void) : "Fired to send a message using the registered entity as the activator."

	@resources []
	]
