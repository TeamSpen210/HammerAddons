@PointClass base(BaseEntityPoint) 
	appliesto(since_P2, MBase, TF2, GMOD) 
	color(200 0 0) 
	iconsprite("editor/logic_eventlistener.vmt") = logic_eventlistener: "An entity that can listen to events fired from code and fire an output when it happens."
	[
	eventname(string) : "Event Name" : : "The name of the event that you want to listen for."
	isenabled[!MBase](boolean) : "Start Enabled" : 1
	startDisabled[MBase](boolean) : "Start Disabled" : 0

	teamnum[!MBase](integer) : "Team Number" : -1 : "If set, will only fire its output if the event is generated from someone of the specified team."
	teamnum[engine](integer) : "Team Number" : -1
	
	teamnum[P2](choices) : "Team Number" : -1 : "If set, will only fire its output if the event is generated from someone of the specified team." =
		[
		-1: "Don't care"
		0: "Singleplayer/Unassigned"
		1: "Spectators" [+complete]
		2: "P-Body"
		3: "ATLAS"
		]
	teamnum[CSGO](choices) : "Team Number" : -1 : "If set, will only fire its output if the event is generated from someone of the specified team." =
		[
		-1: "Don't care"
		0: "Unassigned" [+complete]
		1: "Spectators" [+complete]
		2: "Terrorists"
		3: "Counter-Terrorists"
		]
	teamnum[TF2](choices) : "Team Number" : -1 : "If set, will only fire its output if the event is generated from someone of the specified team." =
		[
		0: "Any"
		2: "RED"
		3: "BLU/Robots"
		5 : "Halloween Bosses"
		1 : "Spectator / Halloween Souls"
		]

	// TODO: CSGO-only?
	fetcheventdata[since_CSGO, TF2](boolean) : "Fetch Event Data" : "0" : "If set, will write the data from the event into the table 'event_data' on this entity."

	// Inputs
	input Enable(void) : "Enable the logic_eventlistener."
	input Disable(void) : "Disable the logic_eventlistener."
	input Toggle[MBase](void) : "Toggle the logic_eventlistener on or off."

	// Outputs
	output OnEventFired(void) : "Fired when the event has been detected."

	@resources []
	]
