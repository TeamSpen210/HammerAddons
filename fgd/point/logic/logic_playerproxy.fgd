@PointClass base(BaseEntityPoint, DamageFilter) 
	color(200 0 0) 
	iconsprite("editor/logic_playerproxy.vmt")
 	autovis(Point Entities, Globals, Player Proxy)
= logic_playerproxy: "An entity that is used to relay inputs/outputs to the player and back to the world."
	[
	input RequestPlayerHealth(void) : "Requests the current player's health from the proxy. This will fire the PlayerHealth output with the value."
	output PlayerHealth(integer)    : "The player's current health value, fired in response to RequestPlayerHealth."
	
	input RequestAmmoState(void) : "Request the ammo state of the player. It will fire PlayerHasAmmo or PlayerHasNoAmmo outputs."
	output PlayerHasAmmo(void)   : "Fired by request if the player has any ammo."
	output PlayerHasNoAmmo(void) : "Fired by request if the player doesn't have any ammo."
	
	input SetFlashlightSlowDrain(void) : "Puts the player's flashlight in slow-power-drain mode (for Episodic darkness)"
	input SetFlashlightNormalDrain(void) : "Puts the player's flashlight to default power drain"

	input SetPlayerHealth(integer)  : "Sets the player's health to this value."
	input SetMaxInputArmor(integer) : "Sets the maximum armor value that could be set by armor inputs."

	input LowerWeapon(void) : "Lowers the players weapon."
	
	input SuppressCrosshair[P1](void) : "Disable the player's crosshair."

	input EnableCappedPhysicsDamage(void) : "Cause player to take less damage from physics objects, and never more than 30 points from any individual strike."
	input DisableCappedPhysicsDamage(void) : "Undo effects of EnableCappedPhysicsDamage"

	input SetLocatorTargetEntity(string) : "Set the entity that the HUD locator should track. (Usually a vehicle)"
	
	input AddPotatosToPortalgun[P2](void) : "Change portalgun bodygroup to show potatos."
	input RemovePotatosFromPortalgun[P2](void) : "Change portalgun bodygroup to not show potatos."
	input SetDropEnabled[P2](boolean) : "Set wether the player is allowed to drop a carried object."
	input ForceVMGrabController[P2](void) : "Force the player to use the view model grab controller for all objects that are picked up."
	input ForcePhysicsGrabController[P2](void) : "Force the player to use the physics grab controller for all objects that are picked up."
	input ResetGrabControllerBehavior[P2](void) : "Resets the grab controller used by the player to its default behavior."
	input SetMotionBlurAmount[P2](float) : "Forces the motion blur effect on the player. Set to < 0 to disable this override."

	output OnFlashlightOn(float) : "Fired when the player turns on his flashlight. This output has the value of how much energy the player had when this happened [0..1]."
	output OnFlashlightOff(float) : "Fired when the player turns off his flashlight. This output has the value of how much energy the player had when this happened [0..1]."

	output PlayerDied(void)             : "Fires when the player dies."
	output PlayerMissedAR2AltFire(void)	: "Player fired an AR2 combine ball that didn't kill any enemies."
	
	output OnStartSlowingTime(void) : "Fired when a Portal player initiates slow time."
	output OnStopSlowingTime(void) : "Fired when a Portal player stops slowing time."
	
	output OnPrimaryPortalPlaced[P2](void) : "Fired when a Portal player successfully places the primary portal."
	output OnSecondaryPortalPlaced[P2](void) : "Fired when a Portal player successfully places the secondary portal."
	output OnDuck[since_P2](void) : "Fired when a player starts to duck."
	output OnUnDuck[since_P2](void) : "Fired when a player releases the duck button."
	output OnJump[since_P2](void) : "Fired when a player jumps."
	]
