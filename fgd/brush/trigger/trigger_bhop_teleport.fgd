@SolidClass base(Trigger) 
	appliesto(KZ)
	line(255 255 255, targetname, filtername) 
	line(255 255 0, targetname, target) 
	line(0 255 0, target, landmark) 
= trigger_bhop_teleport: "A trigger that only allows a player to be inside it for the specified amount of time before they are teleported to a destination. Used primarily for bhop platforms."
	[
	target(target_destination) report: "Remote Destination" : : "The entity specifying the point to which entities should be teleported."
	allowedtime(float) : "Maximum Allowed Time" : "0.05" : "The maximum allowed time a player can be inside this trigger before being teleported. The best height for this time frame would be 2 unit high blocks over your bhops."
	landmark(target_destination) : "Local Destination Landmark" : : "If specified, then teleported entities are offset " +
		"from the target by their initial offset from the landmark."
	mbhoprestrictions[engine](integer): "Multi Bhop Restrictions" : 0 : "Experimental. This allows you to restrict if a player can bhop on the same bhop block multiple times, or bhop on any previous block until they touch the ground outside of the trigger volume. To use this, create your bhop trigger volumes as normal, then tie them all to one trigger_bhop_teleport, and enable the desired state. This works best with simple trigger geometry (squares, rectangles, cylinders) - concave geometry (i.e. a polygon with a hole in it or a S shape) is not properly supported. It's strongly recommended to keep your trigger geometry as simple as possible. Once the player lands on the ground outside of this entity's trigger bounds, the previously bhopped areas are reset."
	mbhoprestrictions(choices): "Multi Bhop Restrictions" : 0 : "Experimental. This allows you to restrict if a player can bhop on the same bhop block multiple times, or bhop on any previous block until they touch the ground outside of the trigger volume. To use this, create your bhop trigger volumes as normal, then tie them all to one trigger_bhop_teleport, and enable the desired state. This works best with simple trigger geometry (squares, rectangles, cylinders) - concave geometry (i.e. a polygon with a hole in it or a S shape) is not properly supported. It's strongly recommended to keep your trigger geometry as simple as possible. Once the player lands on the ground outside of this entity's trigger bounds, the previously bhopped areas are reset." =
	[
		0 : "No Restrictions"
		1 : "No bhopping in the same area more than once."
		2 : "No bhopping in same + prior areas more than once."
		3:  "No bhopping in trigger more than once."
	]
	spawnflags(flags) =
		[
		32: "Preserve angles even when a local landmark is not specified" : 0
		64: "Preserve Movement Velocity ( unchecked = HL1 style teleporter )" : 0
		128: "Reset Timer On Teleport" : 0
		256: "Prevent player movement until the player touches the ground (CS 1.6)" : 0
		512: "Players may teleport only if properly activated by player or team inputs." : 0
		4096: "All players may teleport by default until removed from the active list." : 0
		]

	// Inputs
	input AddAllowedPlayer(void) : "Enable a player to use this teleporter."
	input AddAllowedTeam(void) : "Enable a multiplayer timer set team to use this teleporter."
	input RemoveAllowedPlayer(void) : "Make a player unable to this this teleporter."
	input RemoveAllowedTeam(void) : "Make a multiplayer team unable to use this teleporter."
	input ResetPlayer(void) : "Reset this teleporter to default for this player."
	input ResetTeam(void) : "Reset this teleport to default for this team."
	input AllowForSeekers(void) : "Allow any seeker to use this teleporter (Tag Arena)."
	input AllowForRunners(void) : "Allow any runner to use this teleporter (Tag Arena)."
	input RemoveAllowForSeekers(void) : "Disallow seekers from using this teleporter if they were allowed through AllowForSeekers (Tag Arena)."
	input RemoveAllowForRunners(void) : "Disallow runners from using this teleporter if they were allowed through AllowForRunners (Tag Arena)."
	
	@resources []
	]
