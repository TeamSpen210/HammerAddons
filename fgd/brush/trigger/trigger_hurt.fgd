@SolidClass base(Trigger, MasterEnt, DamageType) 
= trigger_hurt: "A trigger volume that damages entities that touch it, or heal them if negative damage."
	[
	damage[!MBase](integer) : "Damage" : 20 : "The amount of damage done to entities that touch this trigger, per second. " +
		"The damage is applied at a rate of every half-second after the initial touch. " +
		"See also 'Damage Model' for extra details on how damage can be dealt." +
		"Negative values can also be used to heal a target."
	damage[MBase](integer) : "Damage" : 20 : "The amount of damage done to entities that touch this trigger, per second. " +
		"See also 'Damage Model' for extra details on how damage can be dealt." +
		"Negative values can also be used to heal a target."

	// No visible health, most triggers should instakill.
	damage[P1, P2](integer) : "Damage" : 100000 : "The amount of damage done to entities that touch this trigger. " +
		"The damage is done every half-second. See also 'Damage Model' for extra details on how damage can be dealt."

	SetDamage[engine](integer) : "Damage" : 0 : "This is also a keyvalue technically."

	damagecap(integer) : "Damage Cap" : 20 : "The maximum amount of damage that can be dealt when using the Doubling w/Forgiveness damage model."

	damagemodel[engine](integer) : "Damage Model" : 0
	damagemodel(choices) : "Damage Model" : 0 : "How damage is dealt. Normal always does the specified amount of damage each time. " +
		"Doubling w/Forgiveness starts with the specified amount and doubles it each time it hurts the toucher, resetting when they leave the trigger. " +
		"Good for making triggers that are deadly over time, without having to cause massive damage on each touch." =
		[
		0: "Normal"
		1: "Doubling w/forgiveness"
		]

	nodmgforce(boolean) : "Zero Damage Force" : 0 : "Should the damaged entity receive no physics force from this trigger."
	damageforce[L4D2](vector) : "Damage Force Override"

	ha_knockback_dist[engine](integer) : "[HA] Forgiving Laserfields Distance"
	ha_knockback_dist[P2, +srctools](choices) : "[HA] Forgiving Laserfields" : 0 : "If set, add additional catapult triggers on either side to knock the player back safely, instead of killing them." +
	"To determine the direction, this looks for the thinnest face pair, then shifts outward in either direction. When touching, the player is pushed back, and 1 point of damage is applied to produce visual effects. " +
	"The trigger remains deadly, if the player forces their way through." = [
		0: "Disabled"
		8: "Enabled (8 units)"
	]

	hurtrate[MBase](float) : "Hurt Rate" : "0.5" : "Determines how often entities inside the trigger are hurt. By default this is every 0.5 seconds."
	thinkalways[L4D2](boolean) : "Always think every frame" : 0 : "Normally triggers think every half second, in some cases you may need to request it to damage every frame. This is expensive!"
	
	nohurtsounds[INFRA](boolean) : "No Hurt Sounds While Talking" : 0 : "Should Mark play hurt sounds if he's in the middle of something? " +
		"Used in powerstation2 for the smoke in the control room to prevent it from interrupting Mark and Robin."

	// Inputs
	input SetDamage(float) : "Set a new amount of damage for this trigger."

	// Outputs
	output OnHurt(void) : "Fired whenever this trigger hurts something other than a player."
	output OnHurtPlayer(void) : "Fired whenever this trigger hurts a player."
	
	@resources []
	]
