@SolidClass base(BaseEntityBrush, EnableDisable) 
= trigger_brush: "A trigger volume that can be used, and can relay touches to its parent."
	[
	// Move this here, so we can check/uncheck boxes.
	spawnflags[+srctools](flags) = [
		1: "Ignore Players"
		2: "Ignore NPCs"
		4: "Ignore func_pushable"
		8: "Ignore touches"
		16: "Ignore +USE"
	]
	InputFilter[engine](integer) : "Input Flags" : 0
	InputFilter[-srctools](choices) : "Input Flags" : 0 : "Filters what kind of entities can interact with this. The values can be ORed together." = [
		0: "Allow anything"
		1: "Ignore Players"
		2: "Ignore NPCs"
		4: "Ignore func_pushable"
		8: "Ignore touches"
		16: "Ignore +USE"
		]
	InputFilter[+srctools](integer) : "Input Flags" : 0 : "Filters what kind of entities can interact with this. Set this in spawnflags instead."

	DontMessageParent[engine](boolean) : "Don't Message Parent" : 0
	DontMessageParent(choices) : "Proxy To Parent" : 0 : "Relay touching or USEing this entity to the parent entity. " +
		"The input filters will still apply." = 
		[
		1 : "No"
		0 : "Yes"
		]

	output OnStartTouch(void) : "Fired when something touches us."
	output OnEndTouch(void) : "Fired when something stops touching us."
	output OnUse(void) : "Fired when the player (or I/O) USEs us."

	@resources []
	]
