@SolidClass base(BaseEntityBrush) 
= func_precipitation: "A brush entity that creates rain and snow inside its volume."
	[
	renderamt(integer) : "Density (0-100%)" : 5 : "This is the amount of particles that fall down from top side of brush. " +
		"However distance from first particle to second depends on a brush volume size!"
	rendercolor(color255) : "Color (R G B)" : "100 100 100" : "Color added to sprites which are rendered transparently (probably rain and snow particles)"
	preciptype[engine](integer) : "Precipitation Type" : 0
	preciptype(choices) : "Precipitation Type" : 0 =
		[
		0: "Rain"
		1: "Snow"
		2: "Ash"
		3: "Snowfall"
		4: "Particle Rain" [since_L4D]
		5: "Particle Ash" [since_L4D]
		6: "Particle Rainstorm" [since_L4D2]
		7: "Particle Snow" [since_CSGO]
		8: "Particle Bugs" [since_L4D2]
		9: "Particle Smoke" [since_L4D2]
		]

	minspeed[P2](float) : "Minimum speed (snowfall only)" : 25
	maxspeed[P2](float) : "Maximum speed (snowfall only)" : 35

	innerdistance[P2CE](float) : "Inner particle distance" : -1 : "Distance between the inner and outer particle systems. If not set, this will be automatically selected from the precipitation type keyvalue."
	innernearparticle[P2CE](particlesystem) : "Inner near system" : "" : "Name of the inner near particle system. If not set, this will be automatically selected from the precipitation type keyvalue."
	innerfarparticle[P2CE](particlesystem) : "Inner far system" : "" : "Name of the inner far particle system. If not set, this will be automatically selected from the precipitation type keyvalue."
	outerparticle[P2CE](particlesystem) : "Outer system" : "" : "Name of the outer particle system. If not set, this will be automatically selected from the precipitation type keyvalue."
	
	input Alpha(void) : "Changes the density of the rain, " +
	"and may add additional particle effects like fog or leaves. " +
	"Accepts inputs from -1 to 255."
	]
