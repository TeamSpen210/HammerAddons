@SolidClass base(BaseEntity)  // Origin breaks things.
= func_precipitation: "A brush entity that creates rain and snow inside its volume."
	[
	renderamt(integer) : "Density (0-100%)" : 5 : "This is the amount of particles that fall down from top side of brush. " +
		"However distance from first particle to second depends on a brush volume size! " +
		"This can be changed later with the 'Alpha' input."
	rendercolor(color255) : "Color (R G B)" : "100 100 100" : "Color added to sprites which are rendered transparently (probably rain and snow particles)"
	preciptype[engine](integer) : "Precipitation Type" : 0
	preciptype(choices) : "Precipitation Type" : 0 =
		[
		0: "Rain"
		1: "Snow"
		2: "Ash"
		3: "Snowfall"
		4: "Particle Rain" [since_L4D, MBase, GMOD]
		5: "Particle Ash" [since_L4D, MBase, GMOD]
		6: "Particle Rainstorm" [since_L4D2, MBase, GMOD]
		7: "Particle Snow" [since_CSGO, INFRA, MBase, GMOD]
		8: "Particle Bugs" [since_L4D2]
		9: "Particle Smoke" [since_L4D2]
		]
	
	spawnflags(flags) =
		[
		1 : "Particle types only: Clamp precipitation to brush bounds" : 1 [MBase]
		2 : "Particle types only: Suppress outer particle (recommended if clamping)" : 1 [MBase]
		]

	snowdustamt[ASW](float) : "Amount of snow dusting (1-100)" : 50
	minspeed[P2](float) : "Minimum speed (snowfall only)" : 25
	maxspeed[P2](float) : "Maximum speed (snowfall only)" : 35

	particle_name[GMOD](particlesystem) : "Particle System Override (Close)" : "" : "If any of these are set, will override 'Precipitation Type' with a custom particle based one.\nThis is the closest particle system to the player.\nYour map should contain the entered particle system by name in one of the PCF files in its manifest.\nControl point data for each system is: 1 = World position of the particle, 2=Player position/orientation, 3=Density (X component)"
	particle_name_inner[GMOD](particlesystem) : "Particle System Override (Inner)" : "" : "If any of these are set, will override 'Precipitation Type' with a custom particle based one.\nThis is the middle particle system.\nYour map should contain the entered particle system by name in one of the PCF files in its manifest."
	particle_name_outer[GMOD](particlesystem) : "Particle System Override (Outer)" : "" : "If any of these are set, will override 'Precipitation Type' with a custom particle based one.\nThis is the farthest particle system from the player.\nYour map should contain the entered particle system by name in one of the PCF files in its manifest."
	particle_dist_inner[GMOD](float) : "Particle System Distance (Inner)" : "180" : "If using custom particle systems, this will be the distance of the middle one from the player."
	
	input Alpha(integer) : "Changes the density of the rain, " +
	"and may add additional particle effects like fog or leaves. " +
	"Accepts inputs from -1 to 255."

	@resources
		[
		material "materials/effects/fleck_ash1.vmt"
	    material "materials/effects/fleck_ash2.vmt"
	    material "materials/effects/fleck_ash3.vmt"
	    material "materials/effects/ember_swirling001.vmt"
	    material "materials/particle/rain.vmt"
	    material "materials/particle/snow.vmt"
	    particle "rain_storm"
	    particle "rain_storm_screen"
	    particle "rain_storm_outer"
	    particle "rain"
	    particle "rain_outer"
	    particle "ash"
	    particle "ash_outer"
	    particle "snow"
	    particle "snow_outer"
		]
	]
