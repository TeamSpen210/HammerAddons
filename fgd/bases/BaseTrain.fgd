@BaseClass base(BaseEntityVisBrush)
	line(255 255 0, targetname, target) 
= BaseTrain
	[
	spawnflags(flags) =
		[
		1: "No Pitch (X-rot)" : 0
		2: "No User Control" : 0
		8: "Passable" : 0
		16: "Fixed Orientation" : 0
		128: "Use BSP instead of VPhysics collisions ('HL1 Train')" : 0
		256: "Use max speed for pitch shifting move sound" : 0
		512: "Is unblockable by player" : 0
		1024: "Allow Roll (Z-rot)" : 0 [since_P2]
		]

	target(target_destination) : "Spawn path_track" : : "The name of the first path_track in the train's path. The train will spawn at this path_track. It will also turn to face direction indicated by the 'Orientation Type' setting."
	startspeed(integer) : "Max Speed (units / second)" : 100 : "The maximum speed that this train can move. Any speeds applied to this train, such as by path_tracks or SetSpeed inputs, will be clipped to this maximum value."
	speed(integer) : "Initial Speed (units / second)" : 0 : "The speed that the train will move at after it spawns, 0 = stopped."

	velocitytype[engine](integer) : "Change Velocity" : 0
	velocitytype(choices) : "Change Velocity" : 0 : "The method through which this train changes its velocity as it moves along the path." =
		[
		0: "Instantaneously"
		1: "Linear blend"
		2: "Ease in/ease out"
		]

	orientationtype[engine](integer) : "Change Orientation" : 0
	orientationtype(choices) : "Change Orientation" : 1 : "The method through which this train changes its orientation as it moves along the path." =
		[
		0: "Never (fixed orientation)"
		1: "Near path_tracks"
		2: "Linear blend"
		3: "Ease in/ease out"
		]

	wheels(integer) : "Distance Between the Wheels" : 50 : "Used for turning and stopping."
	height(integer) : "Height above track" : 4 : "The height above the track that this train moves."
	bank(string) : "Bank Angle on Turns" : 0
	dmg(integer) : "Damage on Crush" : 0 : "The amount of damage this train does to entities that block it."

	line_basetrain[!engine](string) readonly : "----------------------------------------------------------------------------------------------------------" : ""

	movesound(sound) : "Move Sound" : : "A sound that is played (and looped) while the train is moving."
	movepingsound(sound) : "Move Ping Sound" : : "A sound that is played more frequently as the train speeds up."
	startsound(sound) : "Start Sound" : : "A sound played when the train starts moving."
	stopsound(sound) : "Stop Sound" : : "A sound played when the train stops moving."
	volume(integer) : "Volume (10 = loudest)" : 10
	movesoundminpitch(integer) : "Min pitch (1-255, > 100 = higher)" : 60 : "The sound pitch value that the train will approach as it comes to a stop."
	movesoundmaxpitch(integer) : "Max pitch (1-255, > 100 = higher)" : 200 : "The sound pitch value that the train will approach as it approaches its max speed " +
		" or 1000 units/second if the 'Use max speed for pitch shifting move sound' flag is not set."
	movesoundmintime(float) : "Min move sound interval" : 0 : "Minimum interval at which to play the move ping sound."
	movesoundmaxtime(float) : "Max move sound interval" : 0 : "Maximum interval at which to play the move ping sound."

	// Not in the default FGD post-Left 4 Dead, but seems to exist in engine
	manualspeedchanges(boolean) : "Manual Train Speed" : 0 : "Train Speed is controlled through IO, handles accel, decel times."

	manualaccelspeed(float) : "Manual Accel Speed" : 0 : "Units per second to accelerate to target speed."
	manualdecelspeed(float) : "Manual Decel Speed" : 0 : "Units per second to decelerate to target speed."

	// Inputs
	input SetSpeed(float) : "Set the speed of the train, as a ratio of max speed [0, 1]"
	input SetSpeedDir(float) : "Set the speed of the train, as a ratio of max speed. Negative values reverse the direction [-1, 1]"
	input SetSpeedReal(float) : "Set the speed of the train. Must be a positive value from 0 to max speed."
	input Stop(void) : "Stop the train."
	input StartForward(void) : "Start the train moving forward."
	input StartBackward(void) : "Start the train moving backward."
	input Resume(void) : "Resume the train moving in the current direction after it was stopped via the 'Stop' or 'Toggle' input."
	input Reverse(void) : "Reverse the direction of the train."
	input Toggle(void) : "Toggle the train between start and stop."

	// Added to 2007 post-release for TF2 Payload mode, didn't make it into later games
	input TeleportToPathTrack[until_L4D](string) : "Teleport train to the designated path track. This can be in a new path."
	input SetSpeedForwardModifier[until_L4D](float) : "Applies the given modifier to all forward speeds. [0, 1]"
	
	// This specific input did get ported in L4D2
	input SetSpeedDirAccel[!L4D](float) : "Accel/Decel to the specified speed, as a ratio of max speed. Negative values reverse the direction [-1, 1]"

	// Added in Portal 2, Gmod backported
	input TeleportToPathNode[since_P2, GMod](string) : "Teleport to a destination and stop there. This can be in a new path."
	input MoveToPathNode[since_P2, GMod](string) : "Start moving to a destination and stop when you get there. This must be in the same path."
	input LockOrientation[since_P2, GMod](void) : "Lock the current orientation of the train."
	input UnlockOrientation[since_P2, GMod](void) : "Unlock the current orientation of the train."
	input SetMaxSpeed[since_P2, GMod](float) : "Set a new max speed for the train."

	input SetVelocityType[MESA](integer) : ""
	input EnableControls[MESA](void) : ""
	input DisableControls[MESA](void) : ""

	// Outputs
	output OnStart(void) : "Fired when the train starts moving in either direction."
	// The default FGD mislabels this as OnNext
	output OnNextPoint(string) : "Fires continuously every frame when the train is moving to its next destination."
	output OnArrivedAtDestinationNode[since_P2, GMod](void) : "Fired when this train arrives at a destination that was specified by the MoveToPathNode Input."
	]
