@BaseClass base(BaseEntityVisBrush, _Breakable, DamageFilter) = BreakableBrush
	[
	spawnflags(flags)  =
		[
		1: "Only Break on Trigger" : 0
		2: "Break on Touch" : 0
		4: "Break on Pressure" : 0
		512: "Break immediately on Physics" : 0
		1024: "Don't take physics damage" : 0
		2048: "Don't allow bullet penetration" : 0
		]

	propdata[engine](integer) : "Prop Data" : 0
	propdata(choices) : "Prop Data" : "0" : "Set to the best approximation of the size and material of this entity's brushes. " +
		"If set, it will override this entity's health and damage taken from various weapons. " +
		"See the propdata.txt file in the scripts directory of your MOD to get a detailed list of what each entry specifies." =
		[
		0: "None"
		1: "Wooden.Tiny"
		2: "Wooden.Small"
		3: "Wooden.Medium"
		4: "Wooden.Large"
		5: "Wooden.Huge"
		6: "Metal.Small"
		7: "Metal.Medium"
		8: "Metal.Large"
		9: "Cardboard.Small"
		10: "Cardboard.Medium"
		11: "Cardboard.Large"
		12: "Stone.Small"
		13: "Stone.Medium"
		14: "Stone.Large"
		15: "Stone.Huge"
		16: "Glass.Small"
		17: "Plastic.Small"
		18: "Plastic.Medium"
		19: "Plastic.Large"
		20: "Pottery.Small"
		21: "Pottery.Medium"
		22: "Pottery.Large"
		23: "Pottery.Huge"
		24: "Glass.Window"
		25: "Wooden.Medium.NoStand" [since_L4D]
		]

	health(integer) : "Strength" : 1 : "Number of points of damage to take before breaking. 0 means don't break."
	material[ENGINE](integer) : "Material Type" : 0 : "Set to the material type of the brush. " +
		"Used to decide what sounds to make when damaged, and what gibs to produce when broken."
	material(choices) : "Material Type" : 0 : "Set to the material type of the brush. " +
		"Used to decide what sounds to make when damaged, and what gibs to produce when broken." =
		[
		0: "Glass"
		1: "Wood"
		2: "Metal"
		3: "Flesh"
		4: "CinderBlock"
		5: "Ceiling Tile"
		6: "Computer"
		7: "Unbreakable Glass"
		8: "Rocks"
		9: "Metal Panel" [P2]
		9: "Web" [MESA]
		10: "None"
		]

	explosion[engine](integer) : "Gibs Direction" : 0 : "Used to decide which direction to throw gibs when broken."
	explosion(choices) : "Gibs Direction" : 0 : "Used to decide which direction to throw gibs when broken." =
		[
		0: "Random"
		1: "Relative to Attack"
		2: "Use Precise Gib Dir"
		]

	gibdir(angle) : "Precise Gib Direction" : "0 0 0" : "Specifies the direction to throw gibs when this breakable breaks. " +
		"Be sure to select Use Precise Gib Dir in the Gibs Direction field!"
	nodamageforces(boolean) : "Damaging it Doesn't Push It" : 0 : "Used to determine whether or not damage should cause the brush to move."

	gibmodel[HLS](studio) : "Gib Model" : : "Used by HL1Port to specify a custom gib model to break into, overriding the 'Material Type'."
	spawnobject[ENGINE](pointentityclass) : "Spawn On Break" : 0 : "When broken, an entity of the selected type will be created."
	spawnobject[EP1, EP2, P1, HL2](choices) : "Spawn On Break" : 0 : "When broken, an entity of the selected type will be created." =
		[
		1: "item_battery"
		2: "item_healthkit"
		3: "item_ammo_pistol"
		4: "item_ammo_pistol_large"
		5: "item_ammo_smg1"
		6: "item_ammo_smg1_large"
		7: "item_ammo_ar2"
		8: "item_ammo_ar2_large"
		9: "item_box_buckshot"
		10: "item_flare_round"
		11: "item_box_flare_rounds"
		12: "item_ml_grenade"
		13: "item_smg1_grenade"
		14: "item_box_sniper_rounds"
		15: "unused1"
		16: "weapon_stunstick"
		17: "weapon_ar1"
		18: "weapon_ar2"
		19: "unused2"
		20: "weapon_ml"
		21: "weapon_smg1"
		22: "weapon_smg2"
		23: "weapon_slam"
		24: "weapon_shotgun"
		25: "weapon_molotov"
		26: "item_dynamic_resupply"
		]

	spawnobject[MESA](choices) : "Spawn On Break" : 0 : "When broken, an entity of the selected type will be created." =
		[
		1:	"item_battery"				
		2:	"item_healthkit"			
		24:	"weapon_shotgun"			

		// black mesa items
		27: "item_ammo_glock"
		28: "item_ammo_mp5"
		29: "item_ammo_357"
		30: "item_ammo_crossbow"
		31: "item_ammo_shotgun"
		32: "item_ammo_energy"
		33: "item_grenade_mp5"
		34: "item_grenade_rpg"

		35: "item_weapon_357"
		36: "item_weapon_crossbow"
		37: "item_weapon_crowbar"
		38: "item_weapon_frag"
		39: "item_weapon_glock"
		40: "item_weapon_gluon"
		41: "item_weapon_hivehand"
		42: "item_weapon_mp5"
		43: "item_weapon_rpg"
		44: "item_weapon_satchel"
		45: "item_weapon_shotgun"
		46: "item_weapon_snark"
		47: "item_weapon_tau"
		48: "item_weapon_tripmine"

		49: "item_syringe"
		50: "item_ammo_box"

		51: "prop_soda"
		]


	breakabletype[engine](integer) : "Breakable By" : 0 : "Who can break this?"
	breakabletype[L4D, L4D2](choices) : "Breakable By" : 0 : "Who can break this?" =
		[
		0: "Everyone"
		1: "All Infected"
		2: "Only Tanks"
		]


	// Inputs
	input EnableDamageForces(void) : "Damaging the entity applies physics forces to it."
	input DisableDamageForces(void) : "Damaging the entity does *not* apply physics forces to it."
	]
