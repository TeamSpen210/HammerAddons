@BaseClass = BaseObject // tf2 CBaseObject
	[
	teamnum[engine](integer) : "Team" : 2
	teamnum(choices) : "Team" : 2 : "Team" =
		[
		0: "Unassigned" [+complete]
		1: "Spectators" [+complete]
		2: "RED"
		3: "BLU"
		]

	defaultupgrade[engine](integer) : "Starting Upgrade Level" : 0
	defaultupgrade(choices) : "Starting Upgrade Level" : "0" =
		[
		0: "Level 1"
		1: "Level 2"
		2: "Level 3"
		]

	spawnflags(flags) : "spawnflags" =
		[
		2: "Invulnerable" : 0
		]

	// Inputs
	input SetBuilder(string) : "Sets the builder of this object to the !activator"
	input SetSolidToPlayer(integer) : "Sets if the building should be solid to players other than its builder"
	input Show(void) : "Makes the building visible and tries to re-enable it."
	input Hide(void) : "Makes the building invisible and disables it."
	input SetHealth(integer) : "Sets a new value for the breakable's health. If the breakable's health reaches zero it will break."
	input AddHealth(integer) : "Adds health to the breakable. If the breakable's health reaches zero it will break."
	input RemoveHealth(integer) : "Removes health from the breakable. If the breakable's health reaches zero it will break."
	#snippet input Enable
	#snippet input Disable

	// Outputs
	output OnDamaged(void) : "Fired when the building is damaged."
	output OnRepaired(void) : "Fired when the building is repaired."
	output OnDisabled(void) : "Fired when the building is disabled."
	output OnReenabled(void) : "Fired when the building is reenabled."
	output OnObjectHealthChanged(void) : "Fired when the building's health is changed.."

	@resources [
		material "vgui/screens/vgui_overlay"

		// TODO: Precaches explode, upgrade sounds and explosion particles 
		// from scripts/objects.txt

		particle "nutsnbolts_build"
		particle "nutsnbolts_upgrade"
		particle "nutsnbolts_repair"
		model "models/weapons/w_models/w_toolbox.mdl"
		]
	]
