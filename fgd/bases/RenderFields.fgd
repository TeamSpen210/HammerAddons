@BaseClass = RenderFields
	[
	rendermode[engine](integer) : "Render Mode" : 0
	rendermode(choices) : "Render Mode" : 0 : "Used to set a non-standard rendering mode on this entity. See also 'FX Amount' and 'FX Color'." +
		"* Color & Texture = src*a+dest*(1-a)" +
		"* Glow = src*a + dest, fixed on screen for sprites" +
		"* Solid = Performs alphatest transparency" +
		"* Additive = src*a + dest" +
		"* Additive FF = blend between sprite nimation frames" +
		"* Alpha Add = src + dest*(1-a)" +
		"* World Space Glow = src*a + dest" = 
		[
		0: "Normal"
		1: "Color"
		2: "Texture"
		3: "Glow"
		4: "Solid"
		5: "Additive"
		//6: "Enviromental" - not drawn, used internally.
		7: "Additive Fractional Frame"
		8: "Additive Alpha"
		9: "World Space Glow"
		10: "Don't Render"
		]

	rendercolor(color255) : "FX Color (R G B)" : "255 255 255" : "A color to mix with the model/sprite."
	renderamt(integer) : "FX Alpha (0 - 255)" : 255 : "Transparency amount, requires a Render Mode other than Normal. 0 is invisible, 255 is fully visible."

	// See src/public/const.h for the enum list.
	renderfx[engine](integer) : "Render FX" : 0
	renderfx(choices) : "Render FX" : 0 : "Various somewhat legacy alpha effects. Material Proxies are more modern." =
		[
		0: "Normal"
		1: "Slow Pulse"
		2: "Fast Pulse"
		3: "Slow Wide Pulse"
		4: "Fast Wide Pulse"

		9: "Slow Strobe"
		10: "Fast Strobe"
		11: "Faster Strobe"
		12: "Slow Flicker"
		13: "Fast Flicker"

		5: "Slow Fade Away"
		6: "Fast Fade Away"
		7: "Slow Become Solid"
		8: "Fast Become Solid"

		14: "Constant Glow"

		15: "Fade Out"
		16: "Fade In"
		17: "Pulse Fast Wider"
		18: "Glow Shell"
		]

	mindxlevel[EP1, EP2, HL2, P1](choices) : "Minimum DX Level" : "0" =
		[
		 0 : "Default (lowest)"
		60 : "DirectX 6.0"	
		70 : "DirectX 7.0"
		80 : "DirectX 8.0 (4600Ti)"
		81 : "DirectX 8.1 (FX5200)"
		90 : "DirectX 9.0 SM2.0"
		95 : "DirectX 9.5 SM3.0"
		100: "DirectX 10.0"
		]

	maxdxlevel[EP1, EP2, HL2, P1](choices) : "Maximum DX Level" : "0" =
		[
		0: "Default (lowest)"
		60: "DirectX 6.0"	
		70: "DirectX 7.0"
		80: "DirectX 8.0 (4600Ti)"
		81: "DirectX 8.1 (FX5200)"
		90: "DirectX 9.0 SM2.0"
		95: "DirectX 9.5 SM3.0"
		100: "DirectX 10.0"
		]

	mindxlevel[engine](integer): "Minimum DX Level": 0
	maxdxlevel[engine](integer): "Maximum DX Level": 0

	disablereceiveshadows(boolean) : "Disable Receiving Shadows" : 0

	viewhideflags[engine](integer) : "View Hide Flags" : 0
	viewhideflags[MBase](choices) : "View ID nodraw" : 0 : "This keyvalue can control whether an entity should only draw on things like monitors or mirrors, " +
		"or the opposite. The code for this is { m_iViewHideFlags & (1 << CurrentViewID()) } and supports any combination of view IDs." =
		[
		0 : "Draw normally"
		193 : "Hide in main view (player's eyes)" // VIEW_MAIN + VIEW_INTRO_CAMERA + VIEW_SHADOW_DEPTH_TEXTURE
		36 : "Hide in cameras" // VIEW_MONITOR + VIEW_INTRO_PLAYER
		24 : "Hide in mirrors/water" // VIEW_REFLECTION + VIEW_REFRACTION
		60 : "Hide in cameras and mirrors/water" // VIEW_MONITOR + VIEW_INTRO_PLAYER + VIEW_REFLECTION + VIEW_REFRACTION
		2 : "Hide in 3D skybox" // VIEW_3DSKY
		128 : "Hide projected texture shadows" // VIEW_SHADOW_DEPTH_TEXTURE
		]

	// Inputs
	input Alpha(integer) : "Set the entity's alpha (0 - 255)."
	input Color(color255) : "Set the entity's color (R G B)."

	input SetRenderMode[MBase](integer) : "Sets this entity's render mode."
	input SetRenderFX[MBase](integer) : "Sets this entity's render FX."
	input SetViewHideFlags[MBase](integer) : "Sets this entity's view ID nodraw flags (takes raw flag combination)."
	input AddEffects[MBase](integer) : "Adds an entity effect."
	input RemoveEffects[MBase](integer) : "Removes an entity effect."
	input EnableDraw[!MBase](void) : "Draws an entity if it is not drawn."
	input DisableDraw[!MBase](void) : "Undraws an entity if it is drawn."
	input EnableDraw[MBase](void) : "Draws an entity if it is not drawn. Equivalent to RemoveEffects > 32."
	input DisableDraw[MBase](void) : "Undraws an entity if it is drawn. Equivalent to AddEffects > 32."
	input AddEFlags[MBase](integer) : "Adds an entity flag. NOTE: Entity flags are not the spawn flags you see in Hammer. Use AddSpawnFlags to add spawnflags."
	input RemoveEFlags[MBase](integer) : "Removes an entity flag. NOTE: Entity flags are not the spawn flags you see in Hammer. Use RemoveSpawnFlags to remove spawnflags."

	// This is the closest I could get without putting this in Targetname, as most entities that use collision groups usually use render fields as well
	input SetCollisionGroup[MBase](integer) : "Sets this entity's collision group."
	]
