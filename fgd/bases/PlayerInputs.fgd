@BaseClass base(BaseEntityInputs) = PlayerInputs: "The inputs that can be fired on the player, for entities that pass through those."
	[
	input IgnoreFallDamage[HL2, P1](float) : "Prevent the player from taking fall damage for [n] seconds, but reset back to taking fall damage after the first impact (so players will be hurt if they bounce off what they hit)."
	input IgnoreFallDamageWithoutReset[HL2, P1](float) : "Absolutely prevent the player from taking fall damage for [n] seconds. "

	input SetHUDVisibility(bool) : "Set if the player's HUD is visible or not."
	input SetFogController(target_destination) : "Set the current env_fog_controller entity."
	input SetPostProcessController[MBase](target_destination) : "Set the current postprocess_controller entity."
	input SetColorCorrectionController[since_L4D, MBase](target_destination) : "Set the current color_correction entity."

	input HandleMapEvent(string) : "Generic hook for triggering game/mod-specific events like achievements for a player."
	input SetSuppressAttacks(bool) : "Prevent or re-allow the player from being able to use weapons."

	input DisableFlashlight[HL2, P1](void) : "Disable the player's flashlight."
	input EnableFlashlight[HL2, P1](void) : "Disable the player's flashlight."
	input ForceDropPhysObjects[HL2, P1](void) : "Force the player to drop any physics objects they're carrying"

	input SetBodyGroup(integer) : "HACK: Sets this player's body group (from 0 - n). You'd better know what you are doing!"
	input Ignite(void) : "Ignite, burst into flames"
	input IgniteLifetime(float) : "Ignite, with a parameter lifetime."
	input IgniteNumHitboxFires(integer) : "Ignite, with a parameter number of hitbox fires."
	input IgniteHitboxFireScalev(float) : "Ignite, with a parameter hitbox fire scale."
	
	input GiveWeapon[HL2, P1](string) : "Gives the player a weapon of the specified class name."
	input DropWeapon[HL2, P1](string) : "Causes the player to drop its current weapon in front of them."
	
	input AddArmor[MBase](integer)    : "Adds to the player's current armor value. " +
		"Total armor cannot exceed 100 unless a different value is set in logic_playerproxy."
	input RemoveArmor[MBase](integer) : "Removes from the player's current armor value."
	input SetArmor[MBase](integer)    : "Sets the player's current armor value. " +
		"Cannot exceed 100 unless a different value is set in logic_playerproxy."
	
	input AddAuxPower[MBase](float)    : "Adds to the player's current aux power. Total power cannot exceed 100."
	input RemoveAuxPower[MBase](float) : "Removes from the player's current aux power. Total power cannot exceed 100."
	input SetAuxPower[MBase](float)    : "Sets the player's current aux power. Total power cannot exceed 100."
	
	input TurnFlashlightOn[MBase](void)  : "Turns the player's flashlight on."
	input TurnFlashlightOff[MBase](void) : "Turns the player's flashlight off."
	
	input SquadForceSummon[MBase](void)             : "Forces the player's squad to be resummoned."
	input SquadForceGoTo[MBase](target_destination) : "Forces the player's squad to go to a specific point or entity."
	
	input EnableGeigerCounter[MBase](void)  : "Allows the player's geiger counter to respond to radiation if it was prevented before."
	input DisableGeigerCounter[MBase](void) : "Prevents the player's geiger counter from responding to radiation."
	
	input ShowSquadHUD[MBase](void) : "Shows the player's squad status HUD if it was hidden before."
	input HideSquadHUD[MBase](void) : "Hides the player's squad status HUD."
	
	input SetHUDVisibility[MBase](bool)   : "Sets whether the HUD should be disabled. Also disables most forms of weapon switching."
	input SetSuppressAttacks[MBase](bool) : "Sets whether attacks should be suppressed."
	]

