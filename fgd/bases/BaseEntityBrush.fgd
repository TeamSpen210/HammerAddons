@BaseClass = BaseEntityBrush
	[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	globalname(string) : "Global Entity Name" : : "Name by which this entity is linked to another entity in a different map. " +
		"When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map " +
		"will have the previous map's state copied over their state."

	origin(origin) : "Origin (X Y Z)" : : "The position of this brush entity's center in the world. Rotating entities typically rotate around their origin."

	parentname[!srctools](target_destination) : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent. Set an attachment point via 'parentname,attachment'."
	parentname[srctools](target_destination) : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	parent_attachment_point[srctools](string) : "Attachment Point" : : "If set, attach to this attachment point on the parent during spawn."

	linedivider_vscript[+VSCRIPT, -engine](string) readonly : "-------------------------------------------------------------------------------------------------------" : ""

	vscripts[VSCRIPT](scriptlist) : "Entity Scripts" : : "Name(s) of script files that are executed after all entities have spawned."
	thinkfunction[VSCRIPT](string) : "Script think function" : : "Name of a function in this entity's script scope which will be called automatically."

	vscript_init_code[+VSCRIPT, +srctools](string) : "Init Code" : : "This code will be executed after the Entity Scripts option. Backtick ( ` ) characters will be converted to quotes in-game for strings."
	vscript_init_code2[+VSCRIPT, +srctools](string) : "Init Code 2" : : "This code will be the second line executed after the Entity Scripts option. Backtick ( ` ) characters will be converted to quotes in-game for strings. " +
		"Additional Init Code keyvalues can be added with SmartEdit off."
	// etc

	gmod_allowphysgun[GMod](boolean) : "Allow Physics Gun" : 1 : "If set, " +
		"players cannot use Physics Gun on this entity."
	gmod_allowtools[Gmod](string) : "Sandbox Tool Whitelist" : "" : "If set, " +
		"only given tools can be used on this entity.\n" +
		"You need to supply the tool class names, the names of the .lua files of those tools.\n" +
		"This also includes the context menu properties!"

	linedivider_base[!engine](string) readonly : "----------------------------------------------------------------------------------------------------------" : ""

	// We could have wirebox() for these, but don't. That messes up if these are unset.
	// This is a pretty advanced feature, so it's fine that it has no preview.
	mins(vector) : "Minimum Bounding Box Size" : : "Co-ordinate of the minimum bounding box corner, relative to entity origin. " +
		"The bounding box is drawn from this corner to the other one. " +
		"Requires Bounding Box collisions (solid 2) to be used. " +
		"Can be used to overwrite the collision shape of a brush, although it can only be a cuboid. Can be AddOutputed to change shape at runtime."
	maxs(vector) : "Maximum Bounding Box Size" : : "Co-ordinate of the maximum bounding box corner, relative to entity origin. " +
		"The bounding box is drawn from this corner to the other one. " +
		"Requires Bounding Box collisions (solid 2) to be used. " +
		"Can be used to overwrite the collision shape of a brush, although it can only be a cuboid. Can be AddOutputed to change shape at runtime."

	solid[engine](integer) : "Collisions" : 6
	solid(choices) : "Collisions" : 6 : "Method of collision for this entity. Can be changed at runtime with AddOutput." =
	[
		0: "None"
		1: "BSP (QPhysics)"
		2: "Bounding Box"
		3: "Oriented Bounding Box"
		4: "Oriented Bounding Box, constrained to Yaw only"
		5: "Custom (defined per-entity, if not defined the entity will have bizarre collision behavior)"
		6: "VPhysics"
	]

	linedivider_basebrush[!engine](string) readonly : "----------------------------------------------------------------------------------------------------------" : ""

	// Inputs
	input Kill(void) : "Removes this entity from the world."
	input KillHierarchy(void) : "Removes this entity and all its children from the world."

	input SetParent(target_destination) : "Changes the entity's parent in the movement hierarchy."
	input SetParentAttachment(string) : "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment."
	input SetParentAttachmentMaintainOffset(string) : "Change this entity to attach to a specific attachment point on it's parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it's position relative to the parent at the time it is attached."
	input ClearParent(void) : "Removes this entity from the the movement hierarchy, leaving it free to move independently."
	input SetLocalAngles[MBase](vector) : "Sets the rotation of the entity relative to the parent's rotation."
	input SetLocalOrigin[MBase](vector) : "Sets the position of the entity relative to its parent if one exists. Otherwise relative to the world."
	input SetAbsAngles[MBase](vector) : "Set this entity's angles, always relative to the world origin."
	
	input AddOutput(string) : "Adds an entity I/O connection to this entity or changes keyvalues dynamically. Format:" +
		"\n'<output name> <targetname>:<inputname>:" + 
		"<parameter>:<delay>:<max times to fire (-1 == infinite, 1 = only once)>'\n" +
		"or 'keyvalue newval'. Very dangerous, use with care."
	input FireUser1(void) : "Causes this entity's OnUser1 output to be fired."
	input FireUser2(void) : "Causes this entity's OnUser2 output to be fired."
	input FireUser3(void) : "Causes this entity's OnUser3 output to be fired."
	input FireUser4(void) : "Causes this entity's OnUser4 output to be fired."
	input Use(void) : "Same as a player invoking +use; may not do anything. Can also be invoked by creating an output that does not specify an input."
	input DispatchEffect[until_L4D](string) : "Dispatch an effect from the entity's origin. See https://developer.valvesoftware.com/wiki/List_of_Client_Effects"

	input RunScriptFile[VSCRIPT](string) : "Execute a game script file from disk."
	input RunScriptCode[+VSCRIPT, -srctools](script) : "Execute a string of script source code."
	input RunScriptCode[+VSCRIPT, +srctools](script) : "Execute a string of script source code. Backtick ( ` ) characters will be converted to quotes in-game for strings."
	input RunScriptCodeQuotable[+MBase, +VSCRIPT](string) : "Execute a string of script source code which converts double apostrophes ('') to quotation marks for strings."
	input CallScriptFunction[VSCRIPT](string) : "Execute the given function name."
	input ClearScriptScope[+MBase, +VSCRIPT](void) : "Clears this entity's script scope"

	// Outputs
	output OnUser1(void) : "Fired in response to FireUser1 input."
	output OnUser2(void) : "Fired in response to FireUser2 input."
	output OnUser3(void) : "Fired in response to FireUser3 input."
	output OnUser4(void) : "Fired in response to FireUser4 input."
	output OnKilled[MBase, L4D](void) : "Fired when the entity is killed and removed from the game."

	// Mapbase BaseEntity changes:
	input PassUser1[MBase](string) : "Causes this entity's OutUser1 output to be fired, passing along the parameter unchanged."
	input PassUser2[MBase](string) : "Causes this entity's OutUser2 output to be fired, passing along the parameter unchanged."
	input PassUser3[MBase](string) : "Causes this entity's OutUser3 output to be fired, passing along the parameter unchanged."
	input PassUser4[MBase](string) : "Causes this entity's OutUser4 output to be fired, passing along the parameter unchanged."

	input FireRandomUser[MBase](void) : "Fires OnUser1, OnUser2, OnUser3, or OnUser4 with a 25% chance of each."
	input PassRandomUser[MBase](string) : "Fires OutUser1, OutUser2, OutUser3, or OutUser4 with a 25% chance of each. The parameter is passed along unchanged."
	
	input KillIfNotVisible[MBase](void) : "Removes this entity if it is not in the player's viewcone."
	input KillWhenNotVisible[MBase](void) : "Removes this entity when it is not in the player's viewcone."
	
	input FireOutput[MBase](string) : "Fires the named output on this entity. Format: '<output name>:<activator>:<caller>:<parameter>:<delay>' (OnDeath:hl3cardgame:gaben). Everything beyond the output name is optional."
	input RemoveOutput[MBase](string) : "Removes all instances of the named output on this entity. Wildcards are supported, meaning you could just pass '*' to wipe all outputs from this entity."
	input AcceptInput[MBase](string) : "Fires the named input on this entity. Format: '<input name>:<parameter>:<activator>:<caller>:<output ID>' (SetTarget:cheese). Everything beyond the input name is optional. Mind the fact this is arranged differently from FireOutput, having the parameter right after the input name."
	input CancelPending[MBase](void) : "Cancels any events fired by this entity that are currently pending in the I/O event queue."
	
	input FreeChildren[MBase](void) : "Unparents all direct children of this entity."
	input SetLocalVelocity[MBase](vector) : "Sets this entity's current velocity."
	input SetLocalAngularVelocity[MBase](vector) : "Sets this entity's current angular velocity."
	
	input AddSpawnFlags[MBase](integer) : "Adds spawnflag(s) to this entity. Many spawnflags have their respective numbers suffixed in this FGD."
	input RemoveSpawnFlags[MBase](integer) : "Removes spawnflag(s) to this entity. Many spawnflags have their respective numbers suffixed in this FGD."

	input AddSolidFlags[MBase](integer) : "Adds solid flags to this entity."
	input RemoveSolidFlags[MBase](integer) : "Removes solid flags from this entity."

	input ChangeVariable[MBase](string) : "Similar to AddOutput, except it changes an internal variable similar to logic_datadesc_accessor instead. Very dangerous, use with care."
	
	input SetHealth[MBase](integer) : "Sets this entity's health."
	input AddHealth[MBase](integer) : "Adds to this entity's health."
	input RemoveHealth[MBase](integer) : "Removes from this entity's health."
	
	input SetMaxHealth[MBase](integer) : "Sets this entity's max health."
	
	input SetEntityName[MBase](target_destination) : "Sets this entity's name that other entities should refer to it by."
	input SetTarget[MBase](target_destination) : "Sets this entity's target. This is specific to certain entities, particularly logic entities that involve a target."
	input SetOwnerEntity[MBase](target_destination) : "Sets this entity's owner entity. This has nothing to do with parenting and has more to do with collision and kill credits."
	
	input SetThinkNull[MBase](void) : "Sets this entity's general think function to null. Behavior varies from entity to entity.."
	
	input Use(void) : "More or less replicates the player interacting with an entity. (+USE)"
	input Touch[MBase](target_destination) : "Simulates this entity touching the specified entity."

	output OutUser1[MBase](string) : "Fires in response to PassUser1 input, with the parameter passed through unchanged."
	output OutUser2[MBase](string) : "Fires in response to PassUser2 input, with the parameter passed through unchanged."
	output OutUser3[MBase](string) : "Fires in response to PassUser3 input, with the parameter passed through unchanged."
	output OutUser4[MBase](string) : "Fires in response to PassUser4 input, with the parameter passed through unchanged."
	]
