@BaseClass base(BaseEntityAnimating, DamageFilter) 
	color(0 200 200) 
	line(255 0 0, targetname, enemyfilter) 
= BaseLogicalNPC
	[
	health(integer): "Health" : : "Overrides the NPC's default health. Cannot be higher than Max Health."
	max_health(integer): "Max Health" : : "Overrides the NPC's max health. Health cannot exceed this amount."
	squadname(string) : "Squad Name" : : "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."
	hintgroup(string) : "Hint Group" : : "Hint groups are used by NPCs to restrict their hint-node searching to a subset of the map's hint nodes. Only hint nodes with matching hint group names will be considered by this NPC."
	hintlimiting(boolean) : "Hint Limit Nav" : 0 : "Limits NPC to using specified hint group for navigation requests, but does not limit local navigation."
	
	additionalequipment[engine](string) : "Weapon Held":  "0"
	additionalequipment(choices) : "Weapon Held" : "0" : "Gives the NPC a weapon. NPCs may attack oddly or not attack if they don't know how to use a particular weapon." =
		[
		"0": "Nothing"
		]
	relationship(string) : "Relationship" : : "Changes whether this NPC likes or dislikes certain others. Format is: <string|targetname or classname> <string|disposition> <integer|rank>. Values for disposition are: D_HT (Hate), D_FR (Fear), D_LI (Like), D_NU, (Neutral)."
	
	spawnflags(flags) : "spawnflags" =
		[
		1: "Wait Till Seen" : 0
		2: "Gag (No IDLE sounds until angry)" : 0
		4: "Fall to ground (unchecked means *teleport* to ground)" : 1
		8: "Drop Healthkit" : 0
		16: "Efficient - Don't acquire enemies or avoid obstacles" : 0
		128: "Wait For Script" : 0
		256: "Long Visibility/Shoot" : 0
		512: "Fade Corpse" : 1
		1024: "Think outside PVS" : 0
		2048: "Template NPC (used by npc_maker, will not spawn)" : 0
		4096: "Do Alternate collision/player avoidance for this NPC (largely obsolete, use Start/StopScripting)" : 0
		8192: "Don't drop weapons" : 0
		16384: "Ignore player push (dont give way to player)" : 0
		]

	sleepstate(choices) : "Sleep State" : "0" : "Holds the NPC in stasis until specified condition. See also 'Wake Radius' and 'Wake Squad'." =
		[
		0: "None"
		1: "Waiting for threat"
		2: "Waiting for PVS"
		3: "Waiting for input, ignore PVS"
		4: "Auto PVS"
		5: "Auto PVS after PVS"
		]
	sleepstate[engine](integer) : "Sleep State" : 0
	wakeradius(float) : "Wake Radius" : 0 : "Auto-wake if player within this distance"
	wakesquad(boolean) : "Wake Squad" : 0 : "Wake all of the NPCs squadmates if the NPC is woken"
	enemyfilter(filterclass) : "Enemy Filter" : : "Filter by which to filter potential enemies"
	ignoreunseenenemies(boolean) : "Ignore unseen enemies" : 0 : "Prefer visible enemies, regardless of distance or relationship priority"
	physdamagescale(float) : "Physics Impact Damage Scale" : 1.0 : "Scales damage energy when this character is hit by a physics object. With a value of 0 the NPC will take no damage from physics."

	velocity(vector) : "Local Velocity" :  : "Velocity generated by the entity, can cause strange behavior if changed with AddOutput."
	basevelocity(vector) : "Base Velocity" :  : "Velocity to start with on spawn. Can be changed with AddOutput, where it will be immediately added."
	avelocity(vector) : "Angular Velocity" :  : "Angular velocity to start with on spawn. Can be changed with AddOutput, where it will be immediately added."
	waterlevel[engine](integer) : "Water Level" : 0
	waterlevel(choices) : "Water Level" : 0 : "Current water level of the entity, can cause strange behavior if changed with AddOutput." =
		[
		0 : "Not in Water"
		1 : "Feet"
		2 : "Waist"
		3 : "Eyes"
		]

	// Inputs
	input SetRelationship(string) : "Changes this entity's relationship with another entity or class. Format: <entityname/classname> <D_HT/D_FR/D_LI/D_NU> <priority>"
	input SetEnemyFilter(target_destination) : "Changes this NPC's enemy filter to the named filter."
	input SetHealth(integer) : "Set this NPC's health."
	input PhysDamageScale(float) : "Sets the value that scales damage energy when this character is hit by a physics object. NOTE: 0 means this feature is disabled for backwards compatibility."
	input Break(void) : "Makes the NPC die and disappear."
	input StartScripting(void) : "Enter scripting state. In this state, NPCs ignore a variety of stimulus that would make them break out of their scripts: They ignore danger sounds, ignore +USE, don't idle speak or respond to other NPC's idle speech, and so on."
	input StopScripting(void) : "Exit scripting state."
	input SetSquad(string) : "Set the name of this NPC's squad. It will be removed from any existing squad automatically. Leaving the parameter blank will remove the NPC from any existing squad."
	input Wake(void) : "Wakes up the NPC if it is sleeping."
	input ForgetEntity(target_destination) : "Clears out the NPC's knowledge of a named entity."
	input GagEnable(void) : "Turn on the NPC Gag flag. NPC won't speak outside of choreographed scenes."
	input GagDisable(void) : "Turn off the NPC Gag flag."
	input IgnoreDangerSounds(float) : "Ignore danger sounds for the specified number of seconds."
	input HolsterWeapon(void) : "Force the NPC to holster their weapon. Ignored if the NPC is scripting, if the NPC's weapon is already holstered, or if the NPC doesn't use weapons."
	input HolsterAndDestroyWeapon(void) : "Identical to HolsterWeapon, except the weapon is destroyed once it has been holstered and concealed."
	input UnholsterWeapon(void) : "Force the NPC to draw their weapon. Ignored if the NPC is scripting, if the NPC's weapon is already drawn, or if the NPC doesn't use weapons."
	input ForceInteractionWithNPC(string) : "Force the NPC to use a dynamic interaction with another NPC. Parameter format: <target NPC name> <dynamic interaction name>"
	input UpdateEnemyMemory(string) : "Update (or Create) this NPC's memory of an enemy and its location"
	input BecomeRagdoll(void) : "This NPC will instantly become a ragdoll with ZERO force (just go limp). OnDeath, OnHalfHealth, etc. Outputs will **NOT** BE FIRED."

	// Outputs
	output OnDamaged(void) : "Fired when this NPC takes damage."
	output OnDeath(void) : "Fired when this NPC is killed."
	output OnHalfHealth(void) : "Fired when this NPC reaches half of its maximum health."
	output OnHearWorld(void) : "Fired when this NPC hears a sound (other than combat or the player)."
	output OnHearPlayer(void) : "Fired when this NPC hears the player."
	output OnHearCombat(void) : "Fired when this NPC hears combat sounds."
	output OnFoundEnemy(string) : "Fired when this NPC establishes line of sight to its enemy (outputs entity)."
	output OnLostEnemyLOS(void) : "Fired when this NPC loses line of sight to its enemy."
	output OnLostEnemy(void) : "Fired when this NPC loses its enemy. Usually due to the enemy being killed/removed, or because this NPC has selected a newer, more dangerous enemy."
	output OnFoundPlayer(string) : "Fired when this NPC establishes line of sight to its enemy, and that enemy is a player (outputs player entity)."
	output OnLostPlayerLOS(void) : "Fired when this NPC loses line of sight to its enemy, and that enemy is a player."
	output OnLostPlayer(void) : "Fired when this NPC loses its enemy, and that enemy was a player. Usually due to the enemy being killed/removed, or because this NPC has selected a newer, more dangerous enemy."
	output OnDamagedByPlayer(void) : "Fired when this NPC is hurt by a player."
	output OnDamagedByPlayerSquad(void) : "Fired when this NPC is hurt by a player OR by one of the player's squadmates."
	output OnDenyCommanderUse(void) : "Fired when this NPC has refused to join the player's squad."
	output OnSleep(void) : "Fired when this NPC enters a sleep state."
	output OnWake(void) : "Fired when this NPC comes out of a sleep state."
	output OnForcedInteractionStarted(void) : "Fired when the NPC starts a forced interaction."
	output OnForcedInteractionAborted(void) : "Fired when the NPC aborts a forced interaction for some reason (target NPC died, couldn't be pathed to, etc)"
	output OnForcedInteractionFinished(void) : "NPCs in actbusies can no longer perform dynamic interactions."
	]
