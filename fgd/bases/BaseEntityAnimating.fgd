// All model entities have this.
@BaseClass base(BaseEntityPoint, RenderFields, Reflection, ToggleDraw, DamageFilter) 
	sphere(fademindist) sphere(fademaxdist)
= BaseEntityAnimating
	[
	effects[engine](integer) : "Effect Flags" : 0
	effects(choices) : "Effect Flags" : 0 : "For configuring visual effects. If you want to combine effects, turn SmartEdit off and add the effect numbers together, i.e. 64 + 8 = 72." =
		[
		0 : "None"
		1 : "Bonemerge always, very expensive!!" [complete] // Probably not useful
		2 : "Bright, dynamic light at entity origin"
		4 : "Dim, dynamic light at entity origin"
		8 : "No movement interpolation"
		16 : "Don't cast shadows" [complete] // Covered by separate KV
		32 : "Don't draw entity (entity is fully ignored by clients, NOT server)"
		64 : "Don't receive dynamic shadows" [complete] // Covered by separate KV
		128 : "Bonemerge only in PVS, better performance but prone to disappearing. Use with Bonemerge." [complete] // Probably not useful
		256 : "Blinking glow" [complete] // Doesn't seem to do anything?
		512 : "Flag parent as always animating and realign each frame" [complete] // Probably not useful
		// Via Pinsplash
		1024 : "Mark for fast reflections" [since_P2, +complete] // Covered by separate KV
		2048 : "No shadow depth, for use with env_cascade_light" [since_P2, +complete] // Covered by separate KV
		4096 : "No projected textures" [since_P2, +complete] // Covered by separate KV
		]
	
	solid[engine](integer) : "Collisions": 6
	solid(choices) : "Collisions" : 6 : "Method of collision for this entity. Can be changed at runtime with AddOutput." =
		[
		0: "None"
		1: "BSP (QPhysics)"
		2: "Bounding Box"
		3: "Oriented Bounding Box"
		4: "Oriented Bounding Box, constrained to Yaw only"
		5: "Custom (defined per-entity, if not defined the entity will have bizarre collision behavior)"
		6: "VPhysics"
		]

	body(integer) : "Bodygroup" : 0 : "Body Groups allow turning on and off parts of a model, so sections can be shown or hidden dynamically."
	setbodygroup[complete](integer) : "(Set) Body Group" : 0 :  "Identical to Body Group (body), ask Valve why this is duplicated. Body Groups allow turning on and off parts of a model, so sections can be shown or hidden dynamically."
	
	texframeindex[complete](integer) : "ToggleTexture Frame" : 0 : "The initial texture frame used by the ToggleTexture proxy and controlled by env_texturetoggle."
	hitboxset[complete](string) : "Hitbox Set" : : "Sets the $hboxset to use for collision testing."

	// Exists, but may not be useable.
	skin[engine](integer) : "Skin" : 0
	modelskin[engine](integer) : "Model Skin" : 0 : "Alternate keyvalue for setting the current skin."
	
	modelscale(float) : "Model Scale" : 1.0 : "A multiplier for the size of the model. Negative values are accepted. Does not alter the physics collisions in most cases, however. Negative values can crash the game!"
	
	playbackrate[complete](float) readonly: "Playback Rate" : 1.0 : "Exists, but is immediately set to 1.0 on spawn."
	cycle[engine](float) : "Cycle" : 0.0 : "Internal variable storing the current progress through the animation, 0-1."
	sequence[engine](integer) : "Sequence Number" : 0 : "Stores the index of the currently playing animation. Can be set manually via AddOutput, but care must be used."
	
	suppressanimsounds[since_P2](boolean) : "Suppress Anim Sounds" : 0 : "If set, the prop will not play any sounds that are embedded in animations it plays."

	linedivider_animbase[!engine](string) readonly : "----------------------------------------------------------------------------------------------------------" : ""

	LightingOrigin(target_destination) : "Lighting Origin" :  : "Select any entity (not info_lighting!) from which to sample lighting instead of the entity's origin."
	LightingOriginHack(target_destination) : "Lighting Origin Offset" :  : "The info_lighting_relative from which to sample lighting instead of the entity's origin."
	
	fademindist(float) : "Start Fade Distance/Pixels" : : "Distance at which the entity starts fading. If <0, the entity will disappear instantly when end fade is hit. The value will scale appropriately if the entity is in a 3D Skybox."
	fademaxdist(float) : "End Fade Distance/Pixels" : : "Distance at which the entity ends fading. If <0, the entity won't disappear at all. The value will scale appropriately if the entity is in a 3D Skybox."
	fadescale(float) : "Fade Scale" : : "If specified in the worldspawn, or if the engine is running below DirectX 8, entities will fade out even if the fade distances above aren't specified. This value gives more control over when this happens: numbers smaller than 1 cause the entity to fade out at further distances, and greater than 1 cause it to fade out at closer distances. Using 0 turns off the forced fade altogether."	
	
	shadowcastdist[complete](integer) : "Shadow Cast Distance" : 0 : "Sets how far the entity casts dynamic shadows, in units. 0 means default distance from the shadow_control entity."

	// Disambiguate from projected textures if present.
	disableshadows[until_L4D](boolean) : "Disable Producing Shadows?" : 0 : "Prevent the entity from creating cheap render-to-texture/dynamic shadows."
	disableshadows[since_L4D](boolean) : "Disable Producing Cheap Shadows?" : 0 : "Prevent the entity from creating cheap render-to-texture/dynamic shadows."

	disablereceiveshadows(boolean) : "Disable Receiving Shadows?" : 0 : "Prevents shadows (cheap & projected texture) from appearing on this entity."
	disableshadowdepth[since_L4D](boolean) : "No Affecting Proj Texs"  : 0 : "Prevent this entity from affecting projected texture shadows."
	shadowdepthnocache[since_L4D, +complete](choices) : "Projected Texture Cache" : "0" : "Used to hint projected texture system whether it is sufficient to cache shadow volume of this entity or to force render it every frame instead." =
		[
		0: "Default"
		1: "No cache = render every frame"
		2: "Cache it = render only once"
		]
	shadowdepthnocache[engine](integer): "Projected Texture Cache": 0
	disableflashlight[since_L4D, MBase](boolean) : "No Recieving Proj Texs" : 0 : "Used to disable flashlight (env_projectedtexture) lighting and shadows on this entity."

	linedivider_anim[!engine](string) readonly : "----------------------------------------------------------------------------------------------------------" : ""

	// Inputs
	input Skin(integer) : "Changes the model skin to the specified number."
	input SetBodyGroup(integer) : "Change the model's bodygroup to the specified index number."
	// 2013 only
	input SetModelScale[until_L4D, !GMod](vector) : "Set the scale of the entity's model. Takes two values separated by a space. The first is the target model scale. " +
		"The second value is the number of seconds the change in scale will be spread over."

	input Ignite(void) : "Makes the entity catch on fire indefinitely."
	input IgniteLifetime(float) : "Makes the entity catch on fire for a given amount of time."
	input IgniteNumHitboxFires(integer) : "Makes the entity catch on fire with a given number of hitbox fire particles."
	input IgniteHitboxFireScale(float) : "Makes the entity catch on fire with a given scale for hitbox fire particles."
	input BecomeRagdoll(void) : "Kills the entity and creates a client-side ragdoll from the model with ZERO force (just go limp). Input is only passed if the model contains ragdolling, for other models phys_convert can be used instead. OnDeath, OnHalfHealth, etc. outputs will **NOT** BE FIRED."
	input SetLightingOrigin(string) : "Sets the entity to use as the entity's lighting origin. Any entity can be used."
	input SetLightingOriginHack(string) : "Offsets the entity's lighting origin by their distance from an info_lighting_relative."
	input fademindist(float) : "Sets distance at which the entity starts fading. If <0, the entity will disappear instantly when end fade is hit. The value will scale appropriately if the entity is in a 3D Skybox."
	input fademaxdist(float) : "Sets distance at which the entity ends fading. If <0, the entity won't disappear at all. The value will scale appropriately if the entity is in a 3D Skybox."
	
	input DisableShadow(void) : "Allows the entity to draw a render target (dynamic) shadow."
	input EnableShadow(void) : "Prevents the entity from drawing a render target (dynamic) shadow."
	input DisableReceivingFlashlight[since_L4D, MBase, GMod](void) : "This object will not recieve light or shadows from projected textures (flashlights)."
	input EnableReceivingFlashlight[since_L4D, MBase, GMod](void) : "This object may recieve light or shadows from projected textures (flashlights)."
	
	input AlternativeSorting[SINCE_EP1](boolean) : "Used to attempt to fix sorting problems when rendering. True activates, false deactivates"

	input SetModel[TF2](string) : "Changes the model to the specified path.\nForm of 'models/ammo/ammo_us.mdl'.\nIMPORTANT:\nAbsolutely NO quotes!\nMake sure you use this slash '/'.\nMerasmus says to heed this advice thou shalt corrupt the VMF."
	input SetCycle[TF2](float) : "Skip to a specific point in the current animation."
	input SetPlaybackRate[TF2](float) : "Change the animation speed multiplier."

	input SetModel[MBase](string) : "Sets this entity's model. Must include 'models/' as well as the extension."
	input CreateSeparateRagdoll[MBase](void) : "Creates a separate serverside ragdoll at this entity's origin."
	input CreateSeparateRagdollClient[MBase](void) : "Creates a separate clientside ragdoll at this entity's origin."
	input SetPoseParameter[MBase](string) : "Sets the specified pose parameter to the specified value (e.g. ''aim_yaw 45'')."

	// Outputs
	output OnIgnite(void) : "Fired when this object catches fire."
	output OnServerRagdoll[MBase](ehandle) : "Fires when this object becomes/creates a serverside ragdoll. Passes the ragdoll."
	output OnFizzled[P2](void) : "Fired when this object is fizzled."
	]
