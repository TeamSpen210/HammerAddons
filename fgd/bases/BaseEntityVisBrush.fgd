// All visible Brush entities have these options.
@BaseClass base(BaseEntityBrush, RenderFields, ToggleDraw) 
	sphere(fademindist) sphere(fademaxdist)
= BaseEntityVisBrush
	[
	effects[engine](integer) : "Effect Flags" : 0
	effects(choices) : "Effect Flags" : 0 : "For configuring visual effects. If you want to combine effects, " +
		"turn SmartEdit off and add the effect numbers together, i.e. 64 + 8 = 72." =
		[
		0 : "None"
		1 : "Bonemerge always, very expensive!!"
		2 : "Bright, dynamic light at entity origin"
		4 : "Dim, dynamic light at entity origin"
		8 : "No movement interpolation"
		16 : "Don't cast shadows"
		32 : "Don't draw entity (entity is fully ignored by clients, NOT server)"
		64 : "Don't receive dynamic shadows"
		128 : "Bonemerge only in PVS, better performance but prone to disappearing. Use with Bonemerge."
		256 : "Blinking glow"
		512 : "Flag parent as always animating and realign each frame"	
		// Via Pinsplash
		1024 : "Mark for fast reflections" [since_P2]
		2048 : "No shadow depth, for use with env_cascade_light" [since_P2]
		4096 : "No projected textures" [since_P2]
		]

	vrad_brush_cast_shadows[engine](boolean) : "VRAD Shadows" : 0
	vrad_brush_cast_shadows(choices) : "VRAD Shadows" : 0 : "Determines if this entity will cast lightmap shadows." =
		[
		0 : "Do not cast shadows"
		1 : "Cast shadows"
		]
	_minlight(float) : "Minimum Light Level" : 0 : "The minimum level of ambient light that hits this brush."

	disablereceiveshadows(boolean) : "Disable Receiving Shadows?" : 0 : "Prevents dynamic shadows (e.g. player and prop shadows) from appearing on this entity."
	disableshadowdepth(boolean) : "Disable ShadowDepth" : 0 : "Used to disable rendering into shadow depth (for flashlight) for this entity."
	shadowdepthnocache(choices) : "Projected Texture Cache" : "0" : "Used to hint projected texture system whether it is sufficient to cache shadow volume of this entity or to force render it every frame instead." =
		[
		0: "Default"
		1: "No cache = render every frame"
		2: "Cache it = render only once"
		]
	shadowdepthnocache[engine](integer) : "Projected Texture Cache" : 0
	disableflashlight(boolean) : "Disable flashlight" : 0 : "Used to disable flashlight (env_projectedtexture) lighting and shadows on this entity."
		
	linedivider_visbrush[!engine](string) readonly : "----------------------------------------------------------------------------------------------------------" : ""

	// Inputs
	input DisableShadow(void) : "Allows the entity to draw a render target (dynamic) shadow."
	input EnableShadow(void) : "Prevents the entity from drawing a render target (dynamic) shadow."
	input DisableReceivingFlashlight(void) : "This object will not recieve light or shadows from projected textures (flashlights)."
	input EnableReceivingFlashlight(void) : "This object may recieve light or shadows from projected textures (flashlights)."
	
	input EnableDamageForces(void) : "Damaging the entity applies physics forces to it."
	input DisableDamageForces(void) : "Damaging the entity does not apply physics forces to it."

	input AlternativeSorting[since_EP1](boolean) : "Used to attempt to fix sorting problems when rendering. True activates, false deactivates"

	input RemovePaint[P2](void) : "Remove paint from the brush entity."
	]
