[tool.isort]
sections=["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_thirdparty = ["srctools"]
extra_standard_library = ["importlib_resources"]
known_typing = ["typing", "typing_extensions"]
no_lines_before = ["TYPING", "FRAMEWORK", "STDLIB"]
multi_line_output = 5 # hanging grid grouped
line_length = 95
lines_after_imports = 2
use_parentheses = true
order_by_type = true
include_trailing_comma = true
from_first = true
combine_as_imports = true
src_paths = ["src"]

[tool.ruff]
line-length = 127
target-version = "py313"

[tool.ruff.lint]
select = [
	"E", "UP", "F", "C4", "ANN", "B", "PIE", "RUF", "PYI", "FURB",
	"PLC", "PLE", "PLW",  # Pylint.

	"TC005",  # Empty type-checking block.
	"TC008",  # Remove type alias quotes
	"TC010",  # String in union.
]
allowed-confusables = [
	"Ã—",  # Multiplication sign
]
extend-ignore = [
	# Allow *-imports.
	"F403",
	# name may be undefined, or defined from star imports: module
	"F405",
	# Flake8-annotations.
	# Allow typing.Any
	"ANN401",

	# PyLint:
	"PLC0414",  # import x as x is used for type checking.
	"PLC0415",  # We use non-toplevel imports to fetch our databases after initialising the classes.
	"PLC1901",  # Allow compare to empty string, can be more clear.
	"PLE1205",  # Too many arguments for logging, doesn't handle our format
	"PLW0603",  # Allow use of global statement.
	"PLW2901",  # Allow redefining loop var inside the loop.

	# Ruff:
	"RUF005",  # tuple + vec should not be replaced with iteration
	"RUF022", # All not sorted
	"RUF023", # Slots not sorted
	"RUF059",  # Allow unused locals inside tuple unpacks
	"RUF100", # Sometimes use # noqa for other linters

	# Flake8-bugbear:
	# Loop control var not used, triggers on unpackings.
	"B007",
	# Stacklevel parameter required for warnings.warn() - doesn't detect positional args.
	"B028",

	# Pycodestyle, when out of preview:
	"E221",  # Allow multiple spaces before operators if we want to align
	"E226",  # Allow no spaces like "1+1", sometimes useful to indicate precedence

	# Pyupgrade:
	# Keep using typing types even with __future__.annotations.
	"UP006", "UP007",

	# Flake8-pie:
	# Prefer to use pass in empty functions, even if docstring is present
	"PIE790",
	# Allow aliases for enum values, used often.
	"PIE796",
	]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
	"srctools.math.FrozenVec", "srctools.math.FrozenAngle", "srctools.math.FrozenMatrix",
	"typing.cast", "srctools.logger.get_logger",
]
